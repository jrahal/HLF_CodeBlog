[
    {
        "id": "ac3b7d6e.3a52",
        "type": "tab",
        "label": "Init Persishable Blockchain",
        "disabled": false,
        "info": ""
    },
    {
        "id": "56f9cd86.fe4934",
        "type": "tab",
        "label": "Start Particle Electron",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5e102eff.67646",
        "type": "tab",
        "label": "Particle Receiver",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5e11e736.5672e",
        "type": "tab",
        "label": "Blockchain REST API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bc8d2e6e.a0fa7",
        "type": "tab",
        "label": "Load Blockchain",
        "disabled": false,
        "info": ""
    },
    {
        "id": "79d32cd8.ef96ec",
        "type": "tab",
        "label": "IoT Asset Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "645bf6a3.4fec68",
        "type": "tab",
        "label": "Track Asset History",
        "disabled": false
    },
    {
        "id": "50a0c904.87a4b",
        "type": "ui_group",
        "z": "",
        "name": "Start Particle Electron Geolocation",
        "tab": "ae68f83b.8f0f08",
        "order": 1,
        "disp": true,
        "width": "12"
    },
    {
        "id": "ae68f83b.8f0f08",
        "type": "ui_tab",
        "z": "",
        "name": "Start Particle Geolocation Reporting",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "9e03b39f.86b37",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "393d1778.26aef",
        "type": "particle-cloud",
        "z": "",
        "host": "https://api.particle.io",
        "port": "443",
        "accesstoken": "",
        "name": ""
    },
    {
        "id": "2e59e7c9.8998c",
        "type": "ui_group",
        "z": "",
        "name": "Asset Visualization on a Map",
        "tab": "4576e05b.f0749",
        "order": 3,
        "disp": true,
        "width": "10"
    },
    {
        "id": "27003579.de1d82",
        "type": "ui_group",
        "z": "",
        "name": "Asset Tracking",
        "tab": "4576e05b.f0749",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "c0849f22.f7bf58",
        "type": "ui_group",
        "z": "",
        "name": "Geo Coordinate Location Data",
        "tab": "4576e05b.f0749",
        "order": 3,
        "disp": true,
        "width": "11"
    },
    {
        "id": "5952fd5c.a948fc",
        "type": "twilio-api",
        "z": "",
        "sid": "ACc662d8bec298af6e95e6e4194cf7ce3b",
        "from": "5512226866 ",
        "name": ""
    },
    {
        "id": "4576e05b.f0749",
        "type": "ui_tab",
        "z": "",
        "name": "Developer View of IoT Asset Tracking using BlockChain ",
        "icon": "dashboard"
    },
    {
        "id": "999ba5dc.e7c48",
        "type": "ui_group",
        "z": "",
        "name": "Query Particle Electron",
        "tab": "ae68f83b.8f0f08",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d3ea2b16.01aff8",
        "type": "http request",
        "z": "56f9cd86.fe4934",
        "name": "Send POST request",
        "method": "POST",
        "ret": "txt",
        "url": "https://api.particle.io/v1/devices/{{ParticleElectron}}/SetInterval?access_token={{ParticleAccessToken}}",
        "tls": "",
        "x": 830,
        "y": 100,
        "wires": [
            [
                "3c32693c.6527a6"
            ]
        ]
    },
    {
        "id": "3c32693c.6527a6",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "output/debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1030,
        "y": 100,
        "wires": []
    },
    {
        "id": "f2483fb3.6c0b9",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "44b09e14.86ef88"
            ]
        ]
    },
    {
        "id": "44b09e14.86ef88",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Start Reporting (60 Seconds)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params=60",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 80,
        "wires": [
            [
                "41ba1fe5.aad588"
            ]
        ]
    },
    {
        "id": "76cf861c.d9b29",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Stop Reporting (0 seconds)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params=0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "41ba1fe5.aad588"
            ]
        ]
    },
    {
        "id": "38bcad75.e912ca",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "Off",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "76cf861c.d9b29"
            ]
        ]
    },
    {
        "id": "be4eaec8.7c3bd",
        "type": "comment",
        "z": "56f9cd86.fe4934",
        "name": "You can also start Geolocation Reporting from the Particle Console",
        "info": "You can also start Geolocation Reporting from the Particle Console:\nhttps://console.particle.io/devices/<your particle device id>",
        "x": 740,
        "y": 60,
        "wires": []
    },
    {
        "id": "4a6a6d92.37ab8c",
        "type": "ui_dropdown",
        "z": "56f9cd86.fe4934",
        "name": "Select Asset Tracking Device",
        "label": "Select Asset Tracking Device (Particle Electron)",
        "place": "Select a Particle Electron",
        "group": "50a0c904.87a4b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 400,
        "y": 180,
        "wires": [
            [
                "ec4bfec6.c6edc",
                "8034c2c.14a97c"
            ]
        ]
    },
    {
        "id": "b067b459.3793e8",
        "type": "ui_form",
        "z": "56f9cd86.fe4934",
        "name": "",
        "label": "Enable this Asset Tracking Device",
        "group": "50a0c904.87a4b",
        "order": 2,
        "width": "12",
        "height": "8",
        "options": [
            {
                "label": "Start Geolocation Reporting",
                "value": "EnableReporting",
                "type": "switch",
                "required": false
            },
            {
                "label": "Interval (default 60sec)",
                "value": "SetInterval",
                "type": "number",
                "required": false
            }
        ],
        "formValue": {
            "EnableReporting": false,
            "SetInterval": ""
        },
        "payload": "",
        "topic": "",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "b9a42386.b265d"
            ]
        ]
    },
    {
        "id": "39203ecf.fa2aa2",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "Set Reporting Interval",
        "property": "payload.SetInterval",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 660,
        "y": 240,
        "wires": [
            [
                "3a0b016d.a4319e"
            ],
            [
                "6b3e63bf.0d3244"
            ]
        ]
    },
    {
        "id": "b9a42386.b265d",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "EnableReporting",
        "property": "payload.EnableReporting",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "39203ecf.fa2aa2"
            ],
            [
                "e6c10cd2.1d3a78"
            ]
        ]
    },
    {
        "id": "e6c10cd2.1d3a78",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Stop Reporting (0 seconds)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params=0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "5ead36ee.a18"
            ]
        ]
    },
    {
        "id": "6b3e63bf.0d3244",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Start Reporting (60 Sec)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params=60",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 260,
        "wires": [
            [
                "5ead36ee.a18"
            ]
        ]
    },
    {
        "id": "3a0b016d.a4319e",
        "type": "template",
        "z": "56f9cd86.fe4934",
        "name": "Set Reporting Interval",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "params={{payload.SetInterval}}",
        "output": "str",
        "x": 900,
        "y": 220,
        "wires": [
            [
                "5ead36ee.a18"
            ]
        ]
    },
    {
        "id": "7158fe0b.b0c198",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "Set Accel Threshold",
        "property": "payload.SetXYZThresh",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4257f1a3.822b88"
            ]
        ]
    },
    {
        "id": "5ead36ee.a18",
        "type": "link out",
        "z": "56f9cd86.fe4934",
        "name": "SetInterval",
        "links": [
            "f63d8f09.8ca198"
        ],
        "x": 1075,
        "y": 320,
        "wires": []
    },
    {
        "id": "f63d8f09.8ca198",
        "type": "link in",
        "z": "56f9cd86.fe4934",
        "name": "",
        "links": [
            "5ead36ee.a18"
        ],
        "x": 55,
        "y": 500,
        "wires": [
            [
                "40d1c747.8c4c28",
                "451a312a.6078a8"
            ]
        ]
    },
    {
        "id": "40d1c747.8c4c28",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 185,
        "y": 480,
        "wires": []
    },
    {
        "id": "71a86a59.45d0bc",
        "type": "http request",
        "z": "56f9cd86.fe4934",
        "name": "Send POST request",
        "method": "POST",
        "ret": "txt",
        "url": "https://api.particle.io/v1/devices/{{ParticleDeviceID}}/SetInterval?access_token={{ParticleAccessToken}}",
        "tls": "",
        "x": 430,
        "y": 520,
        "wires": [
            [
                "4746cee9.b4b08",
                "4f5b3cad.c0391c"
            ]
        ]
    },
    {
        "id": "4257f1a3.822b88",
        "type": "template",
        "z": "56f9cd86.fe4934",
        "name": "Set Accel Thresh",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "params={{payload.SetXYZThresh}}",
        "output": "str",
        "x": 650,
        "y": 380,
        "wires": [
            [
                "2ca7693a.c28fa6"
            ]
        ]
    },
    {
        "id": "2ca7693a.c28fa6",
        "type": "link out",
        "z": "56f9cd86.fe4934",
        "name": "SetXYZThresh",
        "links": [
            "be84b5f9.63fea"
        ],
        "x": 835,
        "y": 380,
        "wires": []
    },
    {
        "id": "be84b5f9.63fea",
        "type": "link in",
        "z": "56f9cd86.fe4934",
        "name": "",
        "links": [
            "2ca7693a.c28fa6"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "4721488c.3a222",
                "54460fa4.f4aa9"
            ]
        ]
    },
    {
        "id": "ec4bfec6.c6edc",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a2396343.7d1fb8",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 390,
        "y": 560,
        "wires": []
    },
    {
        "id": "4721488c.3a222",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 185,
        "y": 640,
        "wires": []
    },
    {
        "id": "838dd8e8.7a3848",
        "type": "http request",
        "z": "56f9cd86.fe4934",
        "name": "Send POST request",
        "method": "POST",
        "ret": "txt",
        "url": "https://api.particle.io/v1/devices/{{ParticleDeviceID}}/SetXYZThresh?access_token={{ParticleAccessToken}}",
        "tls": "",
        "x": 430,
        "y": 680,
        "wires": [
            [
                "4f5b3cad.c0391c",
                "4746cee9.b4b08"
            ]
        ]
    },
    {
        "id": "4f5b3cad.c0391c",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "output/debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 700,
        "y": 520,
        "wires": []
    },
    {
        "id": "9f6bb856.935a9",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 390,
        "y": 720,
        "wires": []
    },
    {
        "id": "75132e30.e8f8c",
        "type": "ui_form",
        "z": "56f9cd86.fe4934",
        "name": "",
        "label": "Set Accelerometer Threshold",
        "group": "50a0c904.87a4b",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Set Accelerometer Threshold",
                "value": "SetXYZThresh",
                "type": "number",
                "required": true
            }
        ],
        "formValue": {
            "SetXYZThresh": ""
        },
        "payload": "",
        "topic": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "7158fe0b.b0c198"
            ]
        ]
    },
    {
        "id": "e5f5839.571f38",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 770,
        "y": 600,
        "wires": [
            [
                "9586eda.aea999"
            ]
        ]
    },
    {
        "id": "71bd925b.e0e28c",
        "type": "ui_toast",
        "z": "56f9cd86.fe4934",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1060,
        "y": 600,
        "wires": []
    },
    {
        "id": "4746cee9.b4b08",
        "type": "json",
        "z": "56f9cd86.fe4934",
        "name": "",
        "pretty": false,
        "x": 650,
        "y": 600,
        "wires": [
            [
                "e5f5839.571f38"
            ]
        ]
    },
    {
        "id": "9586eda.aea999",
        "type": "template",
        "z": "56f9cd86.fe4934",
        "name": "Error Msg",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Error contacting device : {{payload.error}}",
        "output": "str",
        "x": 900,
        "y": 600,
        "wires": [
            [
                "71bd925b.e0e28c"
            ]
        ]
    },
    {
        "id": "351e89f5.58647e",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "GetCurrTemp",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 820,
        "wires": [
            [
                "a51a60d6.5e1568"
            ]
        ]
    },
    {
        "id": "8fd4c2dc.889fb",
        "type": "http request",
        "z": "56f9cd86.fe4934",
        "name": "Send POST request",
        "method": "POST",
        "ret": "txt",
        "url": "https://api.particle.io/v1/devices/{{ParticleDeviceID}}/GetCurrTemp?access_token={{ParticleAccessToken}}",
        "tls": "",
        "x": 510,
        "y": 820,
        "wires": [
            [
                "a79fc084.e40d58",
                "705992d7.f0aa2c"
            ]
        ]
    },
    {
        "id": "86b0be76.980de8",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 470,
        "y": 860,
        "wires": []
    },
    {
        "id": "a79fc084.e40d58",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "output/debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 730,
        "y": 800,
        "wires": []
    },
    {
        "id": "597bcdcf.e9c854",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "",
        "property": "payload.return_value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 830,
        "y": 840,
        "wires": [
            [
                "47f55639.6570a8"
            ]
        ]
    },
    {
        "id": "f1fb79ae.718f48",
        "type": "ui_toast",
        "z": "56f9cd86.fe4934",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1150,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "705992d7.f0aa2c",
        "type": "json",
        "z": "56f9cd86.fe4934",
        "name": "",
        "pretty": false,
        "x": 710,
        "y": 840,
        "wires": [
            [
                "597bcdcf.e9c854",
                "e5f5839.571f38"
            ]
        ]
    },
    {
        "id": "47f55639.6570a8",
        "type": "template",
        "z": "56f9cd86.fe4934",
        "name": "Curr Temp Msg",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "The current temperature is : {{payload.return_value}}",
        "output": "str",
        "x": 980,
        "y": 840,
        "wires": [
            [
                "f1fb79ae.718f48"
            ]
        ]
    },
    {
        "id": "8a85f717.6fc1a8",
        "type": "ui_button",
        "z": "56f9cd86.fe4934",
        "name": "",
        "group": "999ba5dc.e7c48",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Current Temperature of Device",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 860,
        "wires": [
            [
                "a51a60d6.5e1568"
            ]
        ]
    },
    {
        "id": "22ba20e7.530888",
        "type": "ui_button",
        "z": "56f9cd86.fe4934",
        "name": "",
        "group": "999ba5dc.e7c48",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Recent Accelerometer Data",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 150,
        "y": 1020,
        "wires": [
            [
                "f07810b9.9211f8"
            ]
        ]
    },
    {
        "id": "1dcd44c5.c040a3",
        "type": "http request",
        "z": "56f9cd86.fe4934",
        "name": "Send POST request",
        "method": "POST",
        "ret": "txt",
        "url": "https://api.particle.io/v1/devices/{{ParticleDeviceID}}/GetRecentXYZ?access_token={{ParticleAccessToken}}",
        "tls": "",
        "x": 510,
        "y": 980,
        "wires": [
            [
                "b45aab9b.c9c86",
                "aaf951ab.e9f798"
            ]
        ]
    },
    {
        "id": "4f0a0cd3.67588c",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 470,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b45aab9b.c9c86",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "output/debug",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 730,
        "y": 960,
        "wires": []
    },
    {
        "id": "cbe09ea6.f2fe08",
        "type": "switch",
        "z": "56f9cd86.fe4934",
        "name": "",
        "property": "payload.return_value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "1363a930.7a40f7"
            ]
        ]
    },
    {
        "id": "e2e42815.53b1d",
        "type": "ui_toast",
        "z": "56f9cd86.fe4934",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1150,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "aaf951ab.e9f798",
        "type": "json",
        "z": "56f9cd86.fe4934",
        "name": "",
        "pretty": false,
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "cbe09ea6.f2fe08",
                "e5f5839.571f38"
            ]
        ]
    },
    {
        "id": "1363a930.7a40f7",
        "type": "template",
        "z": "56f9cd86.fe4934",
        "name": "Recent XYZ  Msg",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Recent Accelerometer data : {{payload.return_value}}",
        "output": "str",
        "x": 980,
        "y": 1000,
        "wires": [
            [
                "e2e42815.53b1d"
            ]
        ]
    },
    {
        "id": "3ea89fc2.4c02e8",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "Recent XYZ",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 980,
        "wires": [
            [
                "f07810b9.9211f8"
            ]
        ]
    },
    {
        "id": "bde6465e.7a19d",
        "type": "ParticleSSE in",
        "z": "5e102eff.67646",
        "baseurl": "393d1778.26aef",
        "evtname": "deviceLocator",
        "devid": "",
        "consolelog": true,
        "x": 590,
        "y": 80,
        "wires": [
            [
                "4da65482.7b757c"
            ]
        ]
    },
    {
        "id": "4da65482.7b757c",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "Data Arriving",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 840,
        "y": 80,
        "wires": []
    },
    {
        "id": "a2dfbda6.1ac89",
        "type": "ParticleSSE in",
        "z": "5e102eff.67646",
        "baseurl": "393d1778.26aef",
        "evtname": "hook-response/deviceLocator/<your Particle Device ID>/0",
        "devid": "",
        "consolelog": false,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "9298c4a4.0e1dc8",
                "c1e62991.4c4268"
            ]
        ]
    },
    {
        "id": "9298c4a4.0e1dc8",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 640,
        "y": 640,
        "wires": []
    },
    {
        "id": "c1e62991.4c4268",
        "type": "function",
        "z": "5e102eff.67646",
        "name": "Split GeoLocation string",
        "func": "// Split \"40.9837518,-74.11384330000001,1057\" at the ,\nvar geolocation = msg.payload.split(\",\");\n// Split \"hook-response/deviceLocator/<Particle device ID>/0\"\nvar ParticleID = msg.evtname.split(\"/\");\nParticleID[2]=\"2\"+ParticleID[2];\n// Create a JSON object to store in the database\nmsg.payload = { \"AssetID\": ParticleID[2],\n                \"gps\":{\"lat\":geolocation[0],\"lon\":geolocation[1]},\n                \"uncertaintyradius\":geolocation[2],\n                \"timestamp\" : Date.now()\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 600,
        "wires": [
            [
                "41573d27.4228dc"
            ]
        ]
    },
    {
        "id": "41573d27.4228dc",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 920,
        "y": 600,
        "wires": []
    },
    {
        "id": "44f702e9.2f40ac",
        "type": "rbe",
        "z": "5e102eff.67646",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 910,
        "y": 260,
        "wires": [
            [
                "c8ca615d.b75558"
            ]
        ]
    },
    {
        "id": "9200a611.62f0e8",
        "type": "comment",
        "z": "5e102eff.67646",
        "name": "Particle Board is Active",
        "info": "",
        "x": 600,
        "y": 40,
        "wires": []
    },
    {
        "id": "ed6f840c.80b28",
        "type": "comment",
        "z": "5e102eff.67646",
        "name": "Particle Board received response from Google Location API",
        "info": "",
        "x": 710,
        "y": 560,
        "wires": []
    },
    {
        "id": "52ffa5a5.d4ad3c",
        "type": "comment",
        "z": "5e102eff.67646",
        "name": "Only record location when Particle Board moves",
        "info": "",
        "x": 1100,
        "y": 180,
        "wires": []
    },
    {
        "id": "68d9fa1b.1b2a2c",
        "type": "ParticleSSE in",
        "z": "5e102eff.67646",
        "baseurl": "393d1778.26aef",
        "evtname": "AssetTrackerTemperatureEvent",
        "devid": "",
        "consolelog": false,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "dd596e58.8e0e48",
                "f1d26bf1.43688"
            ]
        ]
    },
    {
        "id": "64ef2361.53c9fc",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "Temperature Reading",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 680,
        "y": 460,
        "wires": []
    },
    {
        "id": "ea421aa8.1eb238",
        "type": "ParticleSSE in",
        "z": "5e102eff.67646",
        "baseurl": "393d1778.26aef",
        "evtname": "AssetTrackerAccelerationEvent",
        "devid": "",
        "consolelog": false,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "fe505054.6eb648",
                "f1d26bf1.43688"
            ]
        ]
    },
    {
        "id": "14f97215.2ea326",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "Excessive Acceleration Detected",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 710,
        "y": 180,
        "wires": []
    },
    {
        "id": "fe505054.6eb648",
        "type": "json",
        "z": "5e102eff.67646",
        "name": "",
        "pretty": false,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "14f97215.2ea326",
                "ffa71bbc.c95cd8"
            ]
        ]
    },
    {
        "id": "dd596e58.8e0e48",
        "type": "json",
        "z": "5e102eff.67646",
        "name": "",
        "pretty": false,
        "x": 490,
        "y": 440,
        "wires": [
            [
                "64ef2361.53c9fc",
                "12d98a05.01eab6"
            ]
        ]
    },
    {
        "id": "f1d26bf1.43688",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 490,
        "y": 320,
        "wires": []
    },
    {
        "id": "ffa71bbc.c95cd8",
        "type": "function",
        "z": "5e102eff.67646",
        "name": "Format Accel Event Record",
        "func": "// this was a GetRecentXYZ query, no GPS data\nif( typeof msg.payload.gps === 'undefined') {\n    return null ;\n}\n// Create a JSON object to store in the database\nmsg.blockchaindata = { \"AssetID\": msg.id,\n                \"Accel\":msg.payload.Accel,\n                \"gps\":msg.payload.gps,\n                \"timestamp\" : msg.published_at\n};\n// If the asset didn't move, don't write temp data to the blockchain.\nmsg.payload = msg.payload.gps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 220,
        "wires": [
            [
                "2073b067.8cb4d",
                "44f702e9.2f40ac"
            ]
        ]
    },
    {
        "id": "12d98a05.01eab6",
        "type": "function",
        "z": "5e102eff.67646",
        "name": "Format Temp Event Record",
        "func": "// this was a GetCurrTemp query, no GPS data\nif( typeof msg.payload.gps === 'undefined') {\n    return null ;\n}\n\n// Create a JSON object to store in the database\nmsg.blockchaindata = { \"AssetID\": msg.id,\n                \"Temperature\":msg.payload.Temp,\n                \"gps\":msg.payload.gps,\n                \"timestamp\" : msg.published_at\n};\n\n// If the asset didn't move, don't write temp data to the blockchain.\nmsg.payload = msg.payload.gps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "30749e54.02c8ca",
                "ac947b6a.5024f"
            ]
        ]
    },
    {
        "id": "30749e54.02c8ca",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "2073b067.8cb4d",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "c8ca615d.b75558",
        "type": "change",
        "z": "5e102eff.67646",
        "name": "Store Record",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blockchaindata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 260,
        "wires": [
            [
                "f9f7b4b4.f1b3e",
                "95790c5f.44e5d8"
            ]
        ]
    },
    {
        "id": "f9f7b4b4.f1b3e",
        "type": "debug",
        "z": "5e102eff.67646",
        "name": "BlockChain Data",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1250,
        "y": 320,
        "wires": []
    },
    {
        "id": "dae9e9a5.12f72",
        "type": "comment",
        "z": "5e102eff.67646",
        "name": "Example TemperatureReading",
        "info": "{\"AssetID\":\"long string of numbers\",\"Temperature\":{\"Celsius\":24.25,\"Fahrenheit\":75.650002},\"gps\":{\"lat\":40.973312,\"lon\":-74.092712,\"accuracy\":0},\"timestamp\":\"2018-02-14T14:49:08.132Z\"}",
        "x": 950,
        "y": 460,
        "wires": []
    },
    {
        "id": "38b30653.ba168a",
        "type": "link out",
        "z": "5e102eff.67646",
        "name": "AccelReading Arrived",
        "links": [
            "68e1c93f.be9338"
        ],
        "x": 1355,
        "y": 260,
        "wires": []
    },
    {
        "id": "ac947b6a.5024f",
        "type": "rbe",
        "z": "5e102eff.67646",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 910,
        "y": 380,
        "wires": [
            [
                "abbcc0e6.12427"
            ]
        ]
    },
    {
        "id": "abbcc0e6.12427",
        "type": "change",
        "z": "5e102eff.67646",
        "name": "Store Record",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "blockchaindata",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 380,
        "wires": [
            [
                "43c6eed4.fce798",
                "f9f7b4b4.f1b3e"
            ]
        ]
    },
    {
        "id": "43c6eed4.fce798",
        "type": "link out",
        "z": "5e102eff.67646",
        "name": "TemperatureReading Arrived",
        "links": [
            "72463b9c.c06064"
        ],
        "x": 1195,
        "y": 380,
        "wires": []
    },
    {
        "id": "278dfe56.493d02",
        "type": "inject",
        "z": "5e102eff.67646",
        "name": "Reset RBE GPS Data",
        "topic": "",
        "payload": "{\"lat\":41.972904,\"lon\":-75.092216,\"accuracy\":0}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 780,
        "y": 320,
        "wires": [
            [
                "44f702e9.2f40ac",
                "ac947b6a.5024f"
            ]
        ]
    },
    {
        "id": "c1424e9d.e9923",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "Blockchain Asset response",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1040,
        "y": 100,
        "wires": []
    },
    {
        "id": "43571895.f2af28",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "Particle Electron Asset Tracker",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 710,
        "y": 60,
        "wires": []
    },
    {
        "id": "5453caaf.c7c4fc",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "hyperledger - Create Persishable Demo",
        "method": "POST",
        "ret": "obj",
        "url": "http://{{FabricIP}}:31090/api/SetupDemo",
        "tls": "",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "c1424e9d.e9923"
            ]
        ]
    },
    {
        "id": "4ec21d2d.2cc19c",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "One Time Setup to create the Blockchain Demo",
        "info": "Remember to edit the Blockchain Model chaincode (logic.js) \nIn the setupDemo() function, insert your Particle Device ID\nas the Shipment ID",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "584317aa.e2b918",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "Create a TemperatureReading Transaction",
        "info": "",
        "x": 320,
        "y": 220,
        "wires": []
    },
    {
        "id": "debfbf57.7ff8d",
        "type": "inject",
        "z": "5e11e736.5672e",
        "name": "Sample Temp Data",
        "topic": "",
        "payload": "{\"AssetID\":\"<your Particle Device ID>\",\"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:06:41.178Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "73248645.0baa38"
            ]
        ]
    },
    {
        "id": "73248645.0baa38",
        "type": "function",
        "z": "5e11e736.5672e",
        "name": "Build a TemperatureReading Transaction",
        "func": "// A TemperatureReading Blockchain transaction looks like this:\n//      {\n//      \"$class\": \"org.acme.shipping.perishable.TemperatureReading\",\n//      \"celsius\": 0,\n//      \"latitude\": \"string\",\n//      \"longitude\": \"string\",\n//      \"readingTime\": \"string\",\n//      \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//      }\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent which looks like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n\nmsg.payload = {\n  \"$class\"     : \"org.acme.shipping.perishable.TemperatureReading\",\n  \"celsius\"    : msg.payload.Temperature.Celsius,\n  \"readingTime\": msg.payload.timestamp,\n  \"latitude\"   : msg.payload.gps.lat.toString(),\n  \"longitude\"  : msg.payload.gps.lon.toString(),\n  \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nTempReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/TemperatureReading?data=\"+TempReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "67e6c7c0.3b7be",
                "fa963268.4a59d"
            ]
        ]
    },
    {
        "id": "fa963268.4a59d",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "Blockchain POST TemperatureReading",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "b946b867.8c2eb8"
            ]
        ]
    },
    {
        "id": "67e6c7c0.3b7be",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "b946b867.8c2eb8",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 260,
        "wires": []
    },
    {
        "id": "aeff92d6.6e51d8",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "Create a AccelReading Transaction",
        "info": "",
        "x": 300,
        "y": 500,
        "wires": []
    },
    {
        "id": "c4685c4d.9e43",
        "type": "inject",
        "z": "5e11e736.5672e",
        "name": "Sample Accel Data",
        "topic": "",
        "payload": "{\"AssetID\":\"<your Particle Device ID>\",\"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:16:44.284Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 210,
        "y": 580,
        "wires": [
            [
                "a2e6555e.5e7"
            ]
        ]
    },
    {
        "id": "a2e6555e.5e7",
        "type": "function",
        "z": "5e11e736.5672e",
        "name": "Build a AccelReading Transaction",
        "func": "// An AccelReading Blockchain transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.AccelReading\",\n//   \"accel_x\": 0,\n//   \"accel_y\": 0,\n//   \"accel_z\": 0,\n//   \"latitude\": \"string\",\n//   \"longitude\": \"string\",\n//   \"readingTime\": \"string\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//   }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerAccelerationEvent which looks like this:\n// Example:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\nmsg.payload = {\n    \"$class\"     : \"org.acme.shipping.perishable.AccelReading\",\n    \"accel_x\"    : msg.payload.Accel.x,\n    \"accel_y\"    : msg.payload.Accel.y,\n    \"accel_z\"    : msg.payload.Accel.z,\n    \"readingTime\": msg.payload.timestamp,\n    \"latitude\"   : msg.payload.gps.lat.toString(),\n    \"longitude\"  : msg.payload.gps.lon.toString(),\n    \"shipment\"   : \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nAccelReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/AccelReading?data=\"+AccelReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 540,
        "wires": [
            [
                "a502b4b1.f9b898",
                "f743589c.73ae68"
            ]
        ]
    },
    {
        "id": "f743589c.73ae68",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "Blockchain POST AccelReading",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 810,
        "y": 540,
        "wires": [
            [
                "ffb346ae.85fdf8"
            ]
        ]
    },
    {
        "id": "a502b4b1.f9b898",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 750,
        "y": 500,
        "wires": []
    },
    {
        "id": "ffb346ae.85fdf8",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe2c3b2c.53641",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "Create a GpsReading Transaction - Not used",
        "info": "",
        "x": 330,
        "y": 780,
        "wires": []
    },
    {
        "id": "a5b36465.b8c6a8",
        "type": "inject",
        "z": "5e11e736.5672e",
        "name": "Sample GPS Data",
        "topic": "",
        "payload": "{\"AssetID\":\"<your Particle Device ID>\",\"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\"timestamp\":\"2018-02-14T15:06:41.178Z\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 220,
        "y": 860,
        "wires": [
            [
                "41c2ad12.d9734c"
            ]
        ]
    },
    {
        "id": "41c2ad12.d9734c",
        "type": "function",
        "z": "5e11e736.5672e",
        "name": "Build a GpsReading Transaction",
        "func": "// A GpsReading transaction looks like this:\n//   {\n//   \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n//   \"readingTime\": \"\",\n//   \"readingDate\": \"\",\n//   \"latitude\": \"\",\n//   \"latitudeDir\": \"N\",\n//   \"longitude\": \"\",\n//   \"longitudeDir\": \"N\",\n//   \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#NNNN\"\n//    }\n\n// This function will be passed a msg.payload from the Particle Electron\n// AssetTrackerTemperatureEvent or AssetTrackerAccelerationEvent\n// The msg.payload will look like this:\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Temperature\":{\"Celsius\":22.625,\"Fahrenheit\":72.724998},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:06:41.178Z\"}\n//\n//   {\"AssetID\":\"<Particle Device ID>\",\n//    \"Accel\":{\"x\":23264,\"y\":-20960,\"z\":-2448},\n//    \"gps\":{\"lat\":40.972904,\"lon\":-74.092216,\"accuracy\":0},\n//    \"timestamp\":\"2018-02-14T15:16:44.284Z\"}\n\n// Not certain why the Perishable Model splits the readingTime and readingDate. \n// That's useless, just store the timestamp (which is preserved in readingTime)\n// The model validation won't allow a blank readingDate so construct the properly formatted date here\nvar msec = Date.parse(msg.payload.timestamp);\nvar d = new Date(msec);\nvar ReadingDate = d.getFullYear() + \"-\" + ('0' + (d.getMonth()+1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);\nvar FabricIP=global.get(\"HyperLedgerFabricIP\");\n\nmsg.payload = {\n  \"$class\": \"org.acme.shipping.perishable.GpsReading\",\n  \"readingTime\": msg.payload.timestamp,\n  \"readingDate\": ReadingDate,\n  \"latitude\": msg.payload.gps.lat.toString(),\n  \"latitudeDir\": \"N\",\n  \"longitude\": msg.payload.gps.lon.toString(),\n  \"longitudeDir\": \"N\",\n  \"shipment\": \"resource:org.acme.shipping.perishable.Shipment#\"+msg.payload.AssetID\n};\nGpsReadingMsg = JSON.stringify(msg.payload);\n\nmsg.url = \"http://\"+FabricIP+\":31090/api/GpsReading?data=\"+GpsReadingMsg;\nmsg.headers = {\n    \"Content-Type\":\"application/json\",\n    \"Accept\":\"application/json\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 820,
        "wires": [
            [
                "90e5c278.63f818",
                "6a46fe3d.ad24"
            ]
        ]
    },
    {
        "id": "6a46fe3d.ad24",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "Blockchain POST GpsReading",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 810,
        "y": 820,
        "wires": [
            [
                "46ca2f88.f3fc4"
            ]
        ]
    },
    {
        "id": "90e5c278.63f818",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 750,
        "y": 780,
        "wires": []
    },
    {
        "id": "46ca2f88.f3fc4",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 820,
        "wires": []
    },
    {
        "id": "72463b9c.c06064",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "New TempeatureReading",
        "links": [
            "328eae91.ddbdca",
            "b15c717d.75c89",
            "724c42c6.6475d4",
            "43c6eed4.fce798",
            "57699e62.9a2bd8"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "73248645.0baa38"
            ]
        ]
    },
    {
        "id": "68e1c93f.be9338",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "New AccelReading",
        "links": [
            "eb81c490.807ae8",
            "5c47d0e0.70889",
            "67e5758e.cc2024",
            "38b30653.ba168a",
            "873040ce.e27398"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "a2e6555e.5e7"
            ]
        ]
    },
    {
        "id": "a99c01ca.4f3bd8",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "New GPS Reading",
        "links": [
            "6547d49d.d5662c",
            "ae371ce3.1d6f18"
        ],
        "x": 175,
        "y": 820,
        "wires": [
            [
                "41c2ad12.d9734c"
            ]
        ]
    },
    {
        "id": "e04c3057.1e79",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "Query the list of TemperatureReading Transactions",
        "info": "",
        "x": 340,
        "y": 340,
        "wires": []
    },
    {
        "id": "11ad94f3.52b563",
        "type": "inject",
        "z": "5e11e736.5672e",
        "name": "Query Temp Transactions",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 190,
        "y": 420,
        "wires": [
            [
                "31bac253.7b711e"
            ]
        ]
    },
    {
        "id": "cf0c14eb.275fb8",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "5ab16a1f.d8ab54",
        "type": "comment",
        "z": "5e11e736.5672e",
        "name": "Query the list of AccelReading Transactions",
        "info": "",
        "x": 320,
        "y": 620,
        "wires": []
    },
    {
        "id": "1204c9c0.21fbd6",
        "type": "inject",
        "z": "5e11e736.5672e",
        "name": "Query Accel Transactions",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 190,
        "y": 700,
        "wires": [
            [
                "cf2d0627.886f58"
            ]
        ]
    },
    {
        "id": "5413a978.fa375",
        "type": "debug",
        "z": "5e11e736.5672e",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1100,
        "y": 660,
        "wires": []
    },
    {
        "id": "a39f3672.fb63b",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "Query Blockchain Temp Transactions",
        "links": [
            "2fd969a1.7b1516"
        ],
        "x": 175,
        "y": 380,
        "wires": [
            [
                "31bac253.7b711e"
            ]
        ]
    },
    {
        "id": "ff65d12.913413",
        "type": "link out",
        "z": "5e11e736.5672e",
        "name": "Return Blockchain Transactions",
        "links": [
            "b6d918be.ae353"
        ],
        "x": 1185,
        "y": 420,
        "wires": []
    },
    {
        "id": "af480cff.10c32",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "Query Blockchain Accel Transactions",
        "links": [
            "f995dcaa.13004"
        ],
        "x": 175,
        "y": 660,
        "wires": [
            [
                "cf2d0627.886f58"
            ]
        ]
    },
    {
        "id": "fa8265f2.ef272",
        "type": "function",
        "z": "5e11e736.5672e",
        "name": "Refactor",
        "func": "// We want the table to contain this info:\n//  { \"AssetID\":\"<Particle Device ID>\",\n//    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n//    \"timestamp\":1518116923270,\n//    \"temperature\":4}\n//\n\n// The Blockchain has this info\n// {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n//  \"Accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n//  \"celsius\": 22.625\n//  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n//  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n//  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<Particle Device ID>\",\n//  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n//  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n// Refactor the Blockchain data into a Array\nvar TrackerArray = [];\nvar transaction = {};\nvar AssetID;\nfor(i=0 ; i < msg.payload.length ;i++) {\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"temperature\":msg.payload[i].celsius\n    };\n    TrackerArray.push(transaction);\n}\nmsg.payload = TrackerArray;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 420,
        "wires": [
            [
                "ff65d12.913413"
            ]
        ]
    },
    {
        "id": "df327f35.0d2ea",
        "type": "inject",
        "z": "bc8d2e6e.a0fa7",
        "name": "Reset Database load",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 140,
        "y": 60,
        "wires": [
            [
                "82389d5.4f8aee"
            ]
        ]
    },
    {
        "id": "82389d5.4f8aee",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "Set Global Vars",
        "rules": [
            {
                "t": "set",
                "p": "db-loaded",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "BlockchainLoaded",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "HyperLedgerFabricIP",
                "pt": "global",
                "to": "<your Hyperledger Fabric Public IP>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bdd25a1d.eb22e8",
        "type": "comment",
        "z": "bc8d2e6e.a0fa7",
        "name": "Re-Read the Asset Database into Tracking Array",
        "info": "",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "d0bfabe5.ea5148",
        "type": "debug",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "660c0cde.ad700c",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "Save DB",
        "rules": [
            {
                "t": "set",
                "p": "AssetHistory",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "db-loaded",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "BlockchainLoaded",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 600,
        "wires": [
            [
                "d0bfabe5.ea5148"
            ]
        ]
    },
    {
        "id": "98619ac8.34d468",
        "type": "link in",
        "z": "bc8d2e6e.a0fa7",
        "name": "Load Tables from Blockchain",
        "links": [
            "318a7a4d.b952de",
            "3bef538e.a8fae4"
        ],
        "x": 115,
        "y": 160,
        "wires": [
            [
                "1df0ff39.d2d099"
            ]
        ]
    },
    {
        "id": "23ebe989.94df7e",
        "type": "comment",
        "z": "bc8d2e6e.a0fa7",
        "name": "Read the Blockchain Temperature / GPS transactions into a array",
        "info": "",
        "x": 260,
        "y": 220,
        "wires": []
    },
    {
        "id": "7126feb9.3a508",
        "type": "comment",
        "z": "bc8d2e6e.a0fa7",
        "name": "Read the Blockchain Acceleration / GPS transactions into a array",
        "info": "",
        "x": 250,
        "y": 460,
        "wires": []
    },
    {
        "id": "904576d.7341708",
        "type": "function",
        "z": "bc8d2e6e.a0fa7",
        "name": "Merge Asset Tracker Environmental Data",
        "func": "// Here we concantentate the temperature \n// and accelerometer environmental data \n// into a single array for map display purposes. \n\n// Potentially some overlap on GPS coordinates\n// if the Particle Electron Asset Tracker triggered\n// both events simultaneously.\n// At worst, the Dashboard map won't move for one sec.\n\nvar TemperatureAccelArray = flow.get(\"TemperatureData\");\n\n// There is likely to be fewer Accelerometer events (now loaded in msg.payload)\n// Let's merge msg.payload into TemperatureArray\n// There is a timestamp sort function later in the flow so \n// the array order doesn't really matter\nfor( i=0; i < msg.payload.length; i++ ) {\n\n    // We want the table to contain this info:\n    //  { \"AssetID\":\"<Particle Device ID>\",\n    //    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n    //    \"timestamp\":1518116923270,\n    //    \"accel\":{\"acc_x\":4000,\"acc_y\":5000,\"acc_z\":6000}}\n    //\n    \n    // The Blockchain AccelReading transaction list has this info\n    // {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n    //  \"accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n    //  \"celsius\": 22.625\n    //  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n    //  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n    //  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<Particle Device ID>\",\n    //  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n    //  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n    // Refactor / Add the Blockchain AccelReading data into the Temperature Array\n    var transaction = {};\n    var AssetID;\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"accel\":{\"acc_x\":msg.payload[i].accel_x,\"acc_y\":msg.payload[i].accel_y,\"acc_z\":msg.payload[i].accel_z}\n    };\n    TemperatureAccelArray.push(transaction);\n}\n\nmsg.payload = TemperatureAccelArray;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 600,
        "wires": [
            [
                "660c0cde.ad700c"
            ]
        ]
    },
    {
        "id": "6eebda72.bf0ff4",
        "type": "inject",
        "z": "bc8d2e6e.a0fa7",
        "name": "Query Temp Transactions",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "c02a4c18.b7786"
            ]
        ]
    },
    {
        "id": "ed9232d.fa535d",
        "type": "http request",
        "z": "bc8d2e6e.a0fa7",
        "name": "Blockchain GET TemperatureReading",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{FabricIP}}:31090/api/TemperatureReading",
        "tls": "",
        "x": 690,
        "y": 260,
        "wires": [
            [
                "f9063794.9695b8",
                "5d1507ba.643f5"
            ]
        ]
    },
    {
        "id": "5d1507ba.643f5",
        "type": "function",
        "z": "bc8d2e6e.a0fa7",
        "name": "Store Blockchain data into a new array",
        "func": "// We want the table to contain this info:\n//  { \"AssetID\":\"<Particle Device ID>\",\n//    \"gps\":{\"lat\":\"40.7307068\",\"lon\":\"-74.00583569999999\"},\n//    \"timestamp\":1518116923270,\n//    \"temperature\":4}\n//\n\n// The Blockchain has this info\n// {\"$class\":\"org.acme.shipping.perishable.AccelReading\",\n//  \"Accel_x\":-560,\"accel_y\":2128,\"accel_z\":14496,\n//  \"celsius\": 22.625\n//  \"latitude\":\"40.983727\",\"longitude\":\"-74.113869\",\n//  \"readingTime\":\"2018-02-14T22:45:45.930Z\",\n//  \"shipment\":\"resource:org.acme.shipping.perishable.Shipment#<particle Device ID>\",\n//  \"transactionId\":\"5266128649153dd04cc6b5a2e9cd7e2c9f04cae3c746c2de4bee8a4ad36f6aad\",\n//  \"timestamp\":\"2018-02-14T22:45:45.970Z\"}\n\n// Refactor the Blockchain data into a new array\nvar TrackerArray = [];\nvar transaction = {};\nvar AssetID;\nfor(i=0 ; i < msg.payload.length ;i++) {\n    var msec = Date.parse(msg.payload[i].readingTime);\n    AssetID = msg.payload[i].shipment.split(\"#\");\n    transaction = { \"AssetID\":AssetID[1],\n                    \"gps\":{\"lat\":msg.payload[i].latitude,\"lon\":msg.payload[i].longitude},\n                    \"timestamp\"  :msec,\n                    \"temperature\":msg.payload[i].celsius\n    };\n    TrackerArray.push(transaction);\n}\nflow.set(\"TemperatureData\", TrackerArray);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 285,
        "y": 375,
        "wires": [
            [
                "842db917.95c1c8"
            ]
        ]
    },
    {
        "id": "f9063794.9695b8",
        "type": "debug",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "af7b48d8.275088",
        "type": "inject",
        "z": "bc8d2e6e.a0fa7",
        "name": "Query Accel Transactions",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 500,
        "wires": [
            [
                "842db917.95c1c8"
            ]
        ]
    },
    {
        "id": "cd6203b2.69695",
        "type": "http request",
        "z": "bc8d2e6e.a0fa7",
        "name": "Blockchain GET AccelReading",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{FabricIP}}:31090/api/AccelReading",
        "tls": "",
        "x": 670,
        "y": 500,
        "wires": [
            [
                "91398161.09b3a8",
                "904576d.7341708",
                "b1eee69f.378f28"
            ]
        ]
    },
    {
        "id": "91398161.09b3a8",
        "type": "debug",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "1f67ceac.645679",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "Pause while loading BlockChain Transactions",
        "rules": [
            {
                "t": "set",
                "p": "BlockchainLoaded",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "c02a4c18.b7786"
            ]
        ]
    },
    {
        "id": "1df0ff39.d2d099",
        "type": "switch",
        "z": "bc8d2e6e.a0fa7",
        "name": "BlockChain Loaded yet?",
        "property": "BlockchainLoaded",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "1f67ceac.645679"
            ]
        ]
    },
    {
        "id": "b1eee69f.378f28",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vibrations",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9ce34ea0.f1063",
        "type": "ui_template",
        "z": "79d32cd8.ef96ec",
        "group": "2e59e7c9.8998c",
        "name": "Embedded Map",
        "order": 0,
        "width": "10",
        "height": "10",
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 820,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a8f981be.de6088",
        "type": "template",
        "z": "79d32cd8.ef96ec",
        "name": "Add Map to Dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<iframe src={{{payload}}} height=515px width=490px></iframe>",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "9ce34ea0.f1063"
            ]
        ]
    },
    {
        "id": "7ea95430.7b5acc",
        "type": "ui_dropdown",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "Select Truck Route",
        "place": "",
        "group": "27003579.de1d82",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 330,
        "y": 280,
        "wires": [
            [
                "8d20d39e.fe2b9"
            ]
        ]
    },
    {
        "id": "b0cb78de.ca2d5",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "Play Particle Electron Route",
        "label": "Track Truck Route",
        "group": "27003579.de1d82",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 360,
        "y": 482,
        "wires": [
            [
                "5c7eee8e.1f7468"
            ]
        ]
    },
    {
        "id": "5c7eee8e.1f7468",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Enable / Disable Tracking Map",
        "rules": [
            {
                "t": "set",
                "p": "start-stop",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 482,
        "wires": [
            [
                "3d40f6c8.68b282"
            ]
        ]
    },
    {
        "id": "3d40f6c8.68b282",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 910,
        "y": 482,
        "wires": []
    },
    {
        "id": "13531cc8.2e9ddb",
        "type": "comment",
        "z": "79d32cd8.ef96ec",
        "name": "One time - Add Map to Dashboard",
        "info": "",
        "x": 190,
        "y": 82,
        "wires": []
    },
    {
        "id": "3ae666be.39522a",
        "type": "comment",
        "z": "79d32cd8.ef96ec",
        "name": "Select Asset and Date Range",
        "info": "",
        "x": 460,
        "y": 320,
        "wires": []
    },
    {
        "id": "bc3eeee3.cd1b58",
        "type": "comment",
        "z": "79d32cd8.ef96ec",
        "name": "Play Asset Route",
        "info": "",
        "x": 100,
        "y": 482,
        "wires": []
    },
    {
        "id": "1cbfd419.4abe54",
        "type": "inject",
        "z": "79d32cd8.ef96ec",
        "name": "Init Dashboard",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "f0b2c022.df819",
                "38fd1df3.0306ca",
                "f2799a68.3216c",
                "b59c7fa0.f40a08"
            ]
        ]
    },
    {
        "id": "f0b2c022.df819",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Asset IDs to be Tracked",
        "func": "msg.options = [ {\"Truck #1\":\"34301\"},\n                {\"Truck #2\":\"34302\"},\n                {\"Truck #3\":\"34303\"},\n                {\"Car #1\": global.get(\"ParticleDeviceID\") }\n              ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "7ea95430.7b5acc"
            ]
        ]
    },
    {
        "id": "c6a7b42b.a6df68",
        "type": "ui_date_picker",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "Start Date",
        "group": "27003579.de1d82",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 460,
        "y": 360,
        "wires": [
            [
                "f614a63.50929d8"
            ]
        ]
    },
    {
        "id": "e6a64177.e1dd58",
        "type": "ui_date_picker",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "End Date",
        "group": "27003579.de1d82",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 460,
        "y": 400,
        "wires": [
            [
                "a7721230.b08058"
            ]
        ]
    },
    {
        "id": "3aa6168b.b578ea",
        "type": "comment",
        "z": "79d32cd8.ef96ec",
        "name": "Select Date Range",
        "info": "",
        "x": 110,
        "y": 422,
        "wires": []
    },
    {
        "id": "c82245a.6ae4bb8",
        "type": "ui_text",
        "z": "79d32cd8.ef96ec",
        "group": "27003579.de1d82",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Blank text",
        "label": "",
        "format": "",
        "layout": "row-spread",
        "x": 300,
        "y": 442,
        "wires": []
    },
    {
        "id": "8d20d39e.fe2b9",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "KitNum",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 280,
        "wires": [
            [
                "894bdaa6.d311",
                "145637eb.f9d218"
            ]
        ]
    },
    {
        "id": "31e93bbf.7b1b54",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "b42cc248.28ddb8",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 850,
        "y": 360,
        "wires": []
    },
    {
        "id": "a1ca538c.3bc3a8",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "894bdaa6.d311",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Reset Location",
        "rules": [
            {
                "t": "set",
                "p": "location",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 280,
        "wires": [
            [
                "31e93bbf.7b1b54"
            ]
        ]
    },
    {
        "id": "15d8af24.13b009",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "Where is Asset Now",
        "label": "Where is Asset Now",
        "group": "27003579.de1d82",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "deae3dad.1c475"
            ]
        ]
    },
    {
        "id": "deae3dad.1c475",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Find it now!",
        "func": "if ( msg.payload === true ) {\n    msg.payload = false;\n    global.set(\"zoom\",true);\n    global.set(\"ZoomedAlready\", false);\n    return msg;\n} else {\n    global.set(\"zoom\",false);   \n}",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 560,
        "wires": [
            [
                "b0cb78de.ca2d5",
                "532c7788.4f8f38"
            ]
        ]
    },
    {
        "id": "38fd1df3.0306ca",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Start Date",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1451624400000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 360,
        "wires": [
            [
                "c6a7b42b.a6df68"
            ]
        ]
    },
    {
        "id": "f2799a68.3216c",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "End Date",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1546300799000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 400,
        "wires": [
            [
                "e6a64177.e1dd58"
            ]
        ]
    },
    {
        "id": "b59c7fa0.f40a08",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Inject /worldmap",
        "func": "msg.payload = \"/worldmap\";\nmsg.payload.command = {};\n\nvar u = 'http://{s}.tile.openstreetmap.org/hot/{z}/{x}/{y}.png';\nvar o = JSON.stringify({ maxZoom: 19, attribution: '&copy; OpenStreetMap'});\n\nmsg.payload.command =   {\n                        layer:\"Esri\",\n                        // Moscone Center\n//                        lat:37.7841772,\n//                        lon-122.403751\n                        // Puerto Rico\n                        lat:18.44081,\n                        lon:-66.08068,                        \n                        zoom:10,\n                        // map: {name:\"OSMhot\", url:u, opt:o},\n                        map: {name:\"Esri\", url:u, opt:o},\n                        };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "a8f981be.de6088"
            ]
        ]
    },
    {
        "id": "f614a63.50929d8",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Start Time Range",
        "rules": [
            {
                "t": "set",
                "p": "start-time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 360,
        "wires": [
            [
                "b42cc248.28ddb8"
            ]
        ]
    },
    {
        "id": "a7721230.b08058",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "End Time Range",
        "rules": [
            {
                "t": "set",
                "p": "end-time",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 400,
        "wires": [
            [
                "a1ca538c.3bc3a8"
            ]
        ]
    },
    {
        "id": "532c7788.4f8f38",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 780,
        "y": 560,
        "wires": []
    },
    {
        "id": "145637eb.f9d218",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Build Table",
        "func": "var WhichKit=global.get(\"KitNum\");\n// Make certain that an Asset Kit has been selected from the drop down\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\nvar AssetTagLocations = [];\nvar starttime = global.get(\"start-time\");\nvar endtime = global.get(\"end-time\");\n\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        // Filter on the selected timestamp range\n        if( (AssetHistory[i].timestamp > starttime) && (AssetHistory[i].timestamp < endtime)) {\n            AssetTagLocations.push(AssetHistory[i]); \n        }\n    }\n}\n\n// Sort by timestamp\nAssetTagLocations.sort(function(x,y) {\n    return x.timestamp - y.timestamp;\n});\n\nvar current_location = global.get(\"location\")||0;\nmsg.payload=current_location;\n// Shorten the Device Asset string.\n// In the DB its a very long Particle Device ID\n// Call the last 5 as unique\nvar Device = WhichKit.substr(WhichKit.length - 5);\n\nmsg.template=\"<style>\";\nmsg.template=msg.template+\"#asset table { width: 560px; margin-top: 10px; }\";\nmsg.template=msg.template+\"#asset tr:nth-child(even){background-color: #f2f2f2;}\";\nmsg.template=msg.template+\"#asset th, #asset td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; width: 10%;}\";\nmsg.template=msg.template+\"</style>\";\n\nmsg.template=msg.template+\"<table id=\\\"asset\\\" span=100%><tr><th>Device</th><th>Timestamp</th><th>Geo Location</th></tr>\";\nfor (var i = 0; i < AssetTagLocations.length; i++) {\n  var d = new Date(AssetTagLocations[i].timestamp);\n  if( i == current_location ) {\n    msg.template = msg.template + \"<tr style=\\\"color:white; background-color:black;\\\"><td>\"+Device+\"</td><td>\" + d.toLocaleDateString()+\" \"+d.toLocaleTimeString() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n  } else {\n//    msg.template = msg.template + \"<tr><td>\" + Device + \"</td><td>\" + d.getTime() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n    msg.template = msg.template + \"<tr><td>\" + Device + \"</td><td>\" + d.toLocaleDateString()+\" \"+d.toLocaleTimeString() + \"</td><td>\" + AssetTagLocations[i].gps.lat.substr(0,9)+\",\"+AssetTagLocations[i].gps.lon.substr(0,10) + \"</td></tr>\";\n  }\n}\nmsg.template = msg.template + \"</table>\";\nmsg.payload = AssetHistory;\nreturn msg ;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 810,
        "y": 240,
        "wires": [
            [
                "de88d5bd.ab03c",
                "51b6644.7c8c91c"
            ]
        ]
    },
    {
        "id": "51b6644.7c8c91c",
        "type": "ui_template",
        "z": "79d32cd8.ef96ec",
        "group": "c0849f22.f7bf58",
        "name": "Location Table",
        "order": 0,
        "width": "11",
        "height": "10",
        "format": "<div ng-bind-html=\"msg.template\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1020,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f9307331.450c6",
        "type": "link in",
        "z": "79d32cd8.ef96ec",
        "name": "Table Highlight",
        "links": [
            "3ef8b710.42a89",
            "b6da26ca.9a1"
        ],
        "x": 655,
        "y": 240,
        "wires": [
            [
                "145637eb.f9d218"
            ]
        ]
    },
    {
        "id": "de88d5bd.ab03c",
        "type": "debug",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "template",
        "x": 1010,
        "y": 200,
        "wires": []
    },
    {
        "id": "8b50ecf5.96d188",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "Show Geo Fence Zones",
        "group": "27003579.de1d82",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "e96ff3a5.643828"
            ]
        ]
    },
    {
        "id": "cb9effa9.b776e",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Draw GeoFence Zones",
        "func": "// If the payload contains an area property - that is an array of co-ordinates, e.g.\nvar Geofence = [\n[40.98221,-74.10203],\n[40.98037,-74.08866],\n[40.97198,-74.09075],\n[40.97611,-74.10416],\n[40.98221,-74.10203]\n];\n\n// Areas\n//    iconColor : can set the colour of the polygon or line.\n//    name : is used as the id key - so can be redrawn/moved.\n//    layer : declares which layer you put it on..\n//\n//Areas, Lines and Circles can also specify more optional properties:\n//    color\n//    fillColor\n//    stroke\n//    weight\n//    opacity\n//    fill\n//    fillOpacity\n//    clickable (if true sets the passed in name as Popup)\n\n\nmsg.payload = { area : Geofence,\n                fillColor : \"blue\",\n                name : \"home\",\n              };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 620,
        "wires": [
            [
                "d677d460.64a008"
            ]
        ]
    },
    {
        "id": "d677d460.64a008",
        "type": "link out",
        "z": "79d32cd8.ef96ec",
        "name": "GeoFence Out",
        "links": [
            "f3aa3024.da15a"
        ],
        "x": 865,
        "y": 640,
        "wires": []
    },
    {
        "id": "e96ff3a5.643828",
        "type": "switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 500,
        "y": 640,
        "wires": [
            [
                "cb9effa9.b776e"
            ],
            [
                "2260fd29.306882"
            ]
        ]
    },
    {
        "id": "2260fd29.306882",
        "type": "function",
        "z": "79d32cd8.ef96ec",
        "name": "Erase GeoFence Zones",
        "func": "msg.payload = { area : [],name : \"home\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 660,
        "wires": [
            [
                "d677d460.64a008"
            ]
        ]
    },
    {
        "id": "669de98b.b698a",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "Show Environmental Threshold Pins",
        "group": "27003579.de1d82",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 280,
        "y": 720,
        "wires": [
            [
                "e085a9cc.7e31c8"
            ]
        ]
    },
    {
        "id": "e085a9cc.7e31c8",
        "type": "switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 500,
        "y": 720,
        "wires": [
            [
                "5ad2858a.8f13d4"
            ],
            [
                "7e3fa793.9e9b18"
            ]
        ]
    },
    {
        "id": "aa2fc296.e6f4d",
        "type": "link out",
        "z": "79d32cd8.ef96ec",
        "name": "GeoFence Out",
        "links": [
            "f3aa3024.da15a"
        ],
        "x": 865,
        "y": 720,
        "wires": []
    },
    {
        "id": "400f7478.65c834",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "SMS Alert when in GeoFence",
        "group": "27003579.de1d82",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 300,
        "y": 800,
        "wires": [
            [
                "bf9ef113.0d6108"
            ]
        ]
    },
    {
        "id": "aa06b49.61fb848",
        "type": "twilio out",
        "z": "79d32cd8.ef96ec",
        "service": "_ext_",
        "twilio": "5952fd5c.a948fc",
        "from": "",
        "number": "551486-0924",
        "name": "",
        "x": 920,
        "y": 820,
        "wires": []
    },
    {
        "id": "866b4a64.9c95e",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Medical Supplies have exceeded environment threshold",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 835,
        "wires": [
            [
                "aa06b49.61fb848"
            ]
        ]
    },
    {
        "id": "a79bc856.b61ee8",
        "type": "ui_switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "label": "SMS Alert on Extreme Temp",
        "group": "27003579.de1d82",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-thermometer-full",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 300,
        "y": 835,
        "wires": [
            [
                "58d334e1.71d0fc"
            ]
        ]
    },
    {
        "id": "5ba02815.5ca868",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Asset has arrived at destination",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 800,
        "wires": [
            [
                "aa06b49.61fb848"
            ]
        ]
    },
    {
        "id": "bf9ef113.0d6108",
        "type": "switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 500,
        "y": 800,
        "wires": [
            [
                "5ba02815.5ca868"
            ]
        ]
    },
    {
        "id": "58d334e1.71d0fc",
        "type": "switch",
        "z": "79d32cd8.ef96ec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 500,
        "y": 835,
        "wires": [
            [
                "866b4a64.9c95e"
            ]
        ]
    },
    {
        "id": "2078e90e.73153e",
        "type": "inject",
        "z": "645bf6a3.4fec68",
        "name": "Tick every sec",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": ".5",
        "crontab": "",
        "once": true,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "7612837a.38cf1c"
            ]
        ]
    },
    {
        "id": "1fe726da.807bc9",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Enable/Disable Map updates",
        "property": "start-stop",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 200,
        "y": 340,
        "wires": [
            [
                "2c8a47e0.13d15"
            ]
        ]
    },
    {
        "id": "7612837a.38cf1c",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Tick Asset History Tracker",
        "property": "db-loaded",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "3bef538e.a8fae4"
            ],
            [
                "1fe726da.807bc9",
                "3522709b.fa2c6"
            ]
        ]
    },
    {
        "id": "e2d06f11.36bcb",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "2c8a47e0.13d15",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Sort records",
        "func": "var WhichKit=global.get(\"KitNum\");\n// Make certain that an Asset Kit has been selected from the drop down\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\nvar AssetTagLocations = [];\nvar starttime = global.get(\"start-time\");\nvar endtime = global.get(\"end-time\");\n\nif( AssetHistory.length === 0 ) { return null ; }\n\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        // Filter on the selected timestamp range\n        if( (AssetHistory[i].timestamp > starttime) && (AssetHistory[i].timestamp < endtime)) {\n            AssetTagLocations.push(AssetHistory[i]);  // Onion GPS timestamp has 10 digit precision\n        }\n    }\n}\n\n// Sort by timestamp\nAssetTagLocations.sort(function(x,y) {\n    return x.timestamp - y.timestamp;\n});\n\n// Query the counter, or 0 the first loop through...\nvar current_location = global.get(\"location\")||0;\ncurrent_location+=1;\nif( current_location == AssetTagLocations.length) {\n    current_location = 0;\n}\nglobal.set(\"location\",current_location);\n\n//msg.payload = AssetTagLocations[current_location].gps;\n//msg.payload.timestamp = AssetTagLocations[current_location].timestamp;\nmsg.payload = AssetTagLocations[current_location];\nreturn msg ;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "e2d06f11.36bcb",
                "b6da26ca.9a1",
                "de82ff1c.b1d048"
            ]
        ]
    },
    {
        "id": "bcd68250.b12dd",
        "type": "worldmap",
        "z": "645bf6a3.4fec68",
        "name": "Update Asset Location on Map",
        "lat": "40.973359599999995",
        "lon": "-74.09271869999999",
        "zoom": "15",
        "layer": "OSM",
        "cluster": "0",
        "maxage": "",
        "usermenu": "show",
        "panit": "true",
        "x": 1170,
        "y": 340,
        "wires": []
    },
    {
        "id": "9d2b62e0.9754a",
        "type": "comment",
        "z": "645bf6a3.4fec68",
        "name": "Find Location Records for a particular asset / date range",
        "info": "",
        "x": 280,
        "y": 380,
        "wires": []
    },
    {
        "id": "3522709b.fa2c6",
        "type": "switch",
        "z": "645bf6a3.4fec68",
        "name": "Zoom to last location",
        "property": "zoom",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 1,
        "x": 480,
        "y": 140,
        "wires": [
            [
                "5b8ff7e.4f2c008"
            ]
        ]
    },
    {
        "id": "5b8ff7e.4f2c008",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Zoom to last location",
        "func": "if ( global.get(\"ZoomedAlready\")) {\n    return null;\n}\n\nvar WhichKit=global.get(\"KitNum\");\n// No Asset Kit has been selected\nif (typeof WhichKit == 'undefined') {\n    return null;\n}\n\nvar AssetHistory = global.get(\"AssetHistory\");\n// find the last recorded timestamp for an Asset\nvar lastRecord= {lat:0, lon:0, timestamp:0};\nfor(i = 0; i < AssetHistory.length; i++ ) {\n    if( AssetHistory[i].AssetID == WhichKit ) {\n        if( lastRecord.timestamp < AssetHistory[i].timestamp ) {\n            lastRecord.timestamp = AssetHistory[i].timestamp ;\n            lastRecord.lat = AssetHistory[i].gps.lat;\n            lastRecord.lon = AssetHistory[i].gps.lon;\n        }\n    }\n}\n\n// Move Map icon to its last reported location \nvar home = {\n    name       : \"Particle Electron\", \n    AssetTag   : global.get(\"KitNum\"),\n    lat        : lastRecord.lat,\n    lon        : lastRecord.lon,\n    icon       : \"hostile\",  //\"briefcase\" // from http://fontawesome.io/icons/\n    iconColor  : \"blue\",\n//    LastSeen   : new Date(lastRecord.timestamp),   // Cloudant\n    LastSeen   : lastRecord.timestamp,               // Blockchain\n    AssetOwner : \"John Walicki\",\n    // Recenter and zoom to the last location of this AssetTag\n    command    : { zoom:18, addtoheatmap:true, autopan:true }\n};\nmsg.payload = home;\n\nmsg.loop = 0;  \nglobal.set(\"ZoomedAlready\", true);\nreturn msg ;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "8350dafe.2cadf"
            ]
        ]
    },
    {
        "id": "8350dafe.2cadf",
        "type": "delay",
        "z": "645bf6a3.4fec68",
        "name": "Zoom Slowly",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "1a08b261.502156"
            ]
        ]
    },
    {
        "id": "bb5479f2.c51e7",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1110,
        "y": 220,
        "wires": []
    },
    {
        "id": "b6da26ca.9a1",
        "type": "link out",
        "z": "645bf6a3.4fec68",
        "name": "",
        "links": [
            "f9307331.450c6"
        ],
        "x": 555,
        "y": 300,
        "wires": []
    },
    {
        "id": "f3aa3024.da15a",
        "type": "link in",
        "z": "645bf6a3.4fec68",
        "name": "GeoFence In",
        "links": [
            "f0297295.998688",
            "7922936a.e4605c",
            "d677d460.64a008",
            "aa2fc296.e6f4d"
        ],
        "x": 935,
        "y": 260,
        "wires": [
            [
                "bcd68250.b12dd"
            ]
        ]
    },
    {
        "id": "de82ff1c.b1d048",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Move Asset",
        "func": "if( typeof msg.payload.gps == 'undefined' ) {\n    return null;\n}\n\n// Track AssetTag around a Map\n// Set all of the common attributes\nvar asset = {\n        name       : \"Particle Electron\", \n        AssetTag   : global.get(\"KitNum\"),\n        lat        : msg.payload.gps.lat,\n        lon        : msg.payload.gps.lon,\n        icon       : \"fa-medkit\",\n        iconColor  : \"blue\",\n        LastSeen   : new Date(msg.payload.timestamp),\n        AssetOwner : \"John Walicki\",\n        // Recenter and zoom if there is a new AssetTag selected\n        command    : { zoom:10, autopan:true }\n    };\n    \n// Is this a Temperature record \nif( typeof msg.payload.temperature != 'undefined' ) {\n    asset.temperature = msg.payload.temperature ;\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        asset.iconColor = \"red\";\n    }\n}\n\n// Is this a Accelerometer record\nif( typeof msg.payload.accel != 'undefined' ) {\n    // The Particle Electron has its own threshold filter\n    // Max vibration has been triggered\n    // Flash the medkit RED\n    asset.vibration = \"X:\"+msg.payload.accel.acc_x +\" Y:\"+msg.payload.accel.acc_y+\" Z:\"+msg.payload.accel.acc_z;\n    asset.iconColor = \"red\";\n}\n\nmsg.payload = asset;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 340,
        "wires": [
            [
                "bcd68250.b12dd",
                "85d5b089.2c78b",
                "f7d78dcc.af7c1"
            ]
        ]
    },
    {
        "id": "1a08b261.502156",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Zoom In",
        "func": "zoomlevel = 10 + msg.loop;\n\n// Recenter and zoom to the last location of this AssetTag\nmsg.payload.command.zoom = zoomlevel;\n\nif( msg.loop < 10 ) {\n    msg.loop = msg.loop + 1;\n\treturn [msg,msg];\n} else {\n\treturn [msg,null];\n}",
        "outputs": "2",
        "noerr": 0,
        "x": 900,
        "y": 220,
        "wires": [
            [
                "bcd68250.b12dd",
                "bb5479f2.c51e7"
            ],
            [
                "8350dafe.2cadf"
            ]
        ]
    },
    {
        "id": "85d5b089.2c78b",
        "type": "function",
        "z": "645bf6a3.4fec68",
        "name": "Extreme Environmental Pins",
        "func": "var ShowEnvironmentalPins = global.get(\"ShowEnvironmentalPins\") || false;\nif( ShowEnvironmentalPins === false ) {\n    return null;\n}\n\nvar d = new Date(msg.payload.timestamp);\n\nif( typeof msg.payload.temperature != 'undefined' ) {\n    // Look for the max temp and flash the medkit RED\n    if (  msg.payload.temperature > 10 ) {\n        var count = context.get('count') || 0;\n        count += 1;\n        context.set('count',count);\n        msg.payload = { \n                name        : \"Medical Supplies exposed to extreme temp #\"+count,\n                AssetTag    : global.get(\"KitNum\"),\n                lat         : msg.payload.lat,\n                lon         : msg.payload.lon,\n                icon        : \"fa-thermometer-full\",\n                temperature : msg.payload.temperature,\n                iconColor   : \"red\",\n                layer       : \"threshold\",\n                EventOccurence : d,\n                AssetOwner  : \"John Walicki\",\n                command     : { zoom : 13, autopan : true }\n            };\n        return msg;\n    }\n}\n\nif( typeof msg.payload.vibration != 'undefined') {\n    var vcount = context.get('vcount') || 0;\n    vcount += 1;\n    context.set('vcount',vcount);\n    msg.payload = { \n            name        : \"Medical Supplies exposed to extreme vibrations #\"+vcount,\n            AssetTag    : global.get(\"KitNum\"),\n            lat         : msg.payload.lat,\n            lon         : msg.payload.lon,\n            icon        : \"fa-bullseye\",\n            vibration   : msg.payload.vibration,\n            iconColor   : \"red\",\n            layer       : \"threshold\",\n            EventOccurence : d,\n            AssetOwner  : \"John Walicki\",\n            command     : { zoom : 13, autopan : true }\n        };\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 380,
        "wires": [
            [
                "bcd68250.b12dd",
                "2a645d9.19ce422"
            ]
        ]
    },
    {
        "id": "3bef538e.a8fae4",
        "type": "link out",
        "z": "645bf6a3.4fec68",
        "name": "Track Assets",
        "links": [
            "98619ac8.34d468"
        ],
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "f7d78dcc.af7c1",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "2a645d9.19ce422",
        "type": "debug",
        "z": "645bf6a3.4fec68",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1110,
        "y": 420,
        "wires": []
    },
    {
        "id": "95790c5f.44e5d8",
        "type": "delay",
        "z": "5e102eff.67646",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1240,
        "y": 260,
        "wires": [
            [
                "38b30653.ba168a"
            ]
        ]
    },
    {
        "id": "c02a4c18.b7786",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "FabricIP",
                "pt": "msg",
                "to": "HyperLedgerFabricIP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "ed9232d.fa535d"
            ]
        ]
    },
    {
        "id": "842db917.95c1c8",
        "type": "change",
        "z": "bc8d2e6e.a0fa7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "FabricIP",
                "pt": "msg",
                "to": "HyperLedgerFabricIP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 500,
        "wires": [
            [
                "cd6203b2.69695"
            ]
        ]
    },
    {
        "id": "31bac253.7b711e",
        "type": "change",
        "z": "5e11e736.5672e",
        "name": "Build a TemperatureReading Transaction",
        "rules": [
            {
                "t": "set",
                "p": "FabricIP",
                "pt": "msg",
                "to": "HyperLedgerFabricIP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 380,
        "wires": [
            [
                "4ff530d9.61e648"
            ]
        ]
    },
    {
        "id": "4ff530d9.61e648",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "Blockchain GET TemperatureReading",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{FabricIP}}:31090/api/TemperatureReading",
        "tls": "",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "cf0c14eb.275fb8",
                "fa8265f2.ef272"
            ]
        ]
    },
    {
        "id": "cf2d0627.886f58",
        "type": "change",
        "z": "5e11e736.5672e",
        "name": "Build a AccelReading Transaction",
        "rules": [
            {
                "t": "set",
                "p": "FabricIP",
                "pt": "msg",
                "to": "HyperLedgerFabricIP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 660,
        "wires": [
            [
                "4cd5a6a0.4efc7"
            ]
        ]
    },
    {
        "id": "4cd5a6a0.4efc7",
        "type": "http request",
        "z": "5e11e736.5672e",
        "name": "Blockchain GET AccelReading",
        "method": "GET",
        "ret": "obj",
        "url": "http://{{FabricIP}}:31090/api/AccelReading",
        "tls": "",
        "x": 810,
        "y": 660,
        "wires": [
            [
                "5413a978.fa375"
            ]
        ]
    },
    {
        "id": "5ad2858a.8f13d4",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Draw Alert Pins",
        "rules": [
            {
                "t": "set",
                "p": "ShowEnvironmentalPins",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 705,
        "wires": [
            [
                "aa2fc296.e6f4d"
            ]
        ]
    },
    {
        "id": "7e3fa793.9e9b18",
        "type": "change",
        "z": "79d32cd8.ef96ec",
        "name": "Erase Alert Pins",
        "rules": [
            {
                "t": "set",
                "p": "ShowEnvironmentalPins",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"command\" : { \"clear\":\"threshold\" } }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 740,
        "wires": [
            [
                "aa2fc296.e6f4d"
            ]
        ]
    },
    {
        "id": "cf2c4d6a.6d3da",
        "type": "ParticleFunc out",
        "z": "56f9cd86.fe4934",
        "baseurl": "393d1778.26aef",
        "devid": "<your Particle Device ID>",
        "fname": "GetCurrTemp",
        "param": "",
        "once": false,
        "repeat": 0,
        "consolelog": true,
        "x": 570,
        "y": 1155,
        "wires": [
            [
                "c683c6eb.ccac5"
            ]
        ]
    },
    {
        "id": "c683c6eb.ccac5",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 1155,
        "wires": []
    },
    {
        "id": "97a092ad.087b8",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "GetCurrTemp using a ParticleFunc node",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 190,
        "y": 1155,
        "wires": [
            [
                "cf2c4d6a.6d3da"
            ]
        ]
    },
    {
        "id": "2b4ad817.aa9ec",
        "type": "inject",
        "z": "ac3b7d6e.3a52",
        "name": "ReInitialize every time Node-RED is deployed",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "ac5fea78.7cf178"
            ]
        ]
    },
    {
        "id": "107f4fa7.dac27",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Reset the map data array on every Node-RED deploy",
        "info": "",
        "x": 250,
        "y": 280,
        "wires": []
    },
    {
        "id": "3c08dd8c.069e72",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "READ this comment - How to configure this set of flows",
        "info": "1. Hopefully you're here because you're following the README at\nhttps://github.com/johnwalicki/IoT-AssetTracking-Perishable-Network-Blockchain\n\n2. If you have already configured your Hyperledger Fabric\nyou know the public IP address to the Composer REST API\nHint - run this command:\n  $ bx cs workers blockchain\n\n  You need to insert the HyperLedger Fabric IP address \n    - On this flow, open the Change node below and set the HyperLedgerFabricIP\n    \n3. On this Init Perishable Blockchain Demo flow\n    - For the demo / workshop, copy the Particle Device ID and Particle Access Token\n      into the change node",
        "x": 400,
        "y": 40,
        "wires": []
    },
    {
        "id": "811a05a4.4d5828",
        "type": "inject",
        "z": "ac3b7d6e.3a52",
        "name": "Manual - One Time Only initialization of Blockchain Network Demo",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "34d4030.592747e"
            ]
        ]
    },
    {
        "id": "62f464bc.b72d84",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Only initialize the Blockchain Shipment Demo once!",
        "info": "",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "66a1f7a7.a9cfa8",
        "type": "link out",
        "z": "ac3b7d6e.3a52",
        "name": "Start One Time Only Init of Blockchain Demo ",
        "links": [
            "f6c1877e.ac19e8"
        ],
        "x": 875,
        "y": 140,
        "wires": []
    },
    {
        "id": "f6c1877e.ac19e8",
        "type": "link in",
        "z": "5e11e736.5672e",
        "name": "One Time Only Init of Blockchain Demo",
        "links": [
            "66a1f7a7.a9cfa8"
        ],
        "x": 175,
        "y": 100,
        "wires": [
            [
                "240a5098.d33d18"
            ]
        ]
    },
    {
        "id": "f0a7df6d.583f48",
        "type": "link in",
        "z": "bc8d2e6e.a0fa7",
        "name": "Re-Read the Asset Database into Tracking Array",
        "links": [
            "3a803d32.9f2f52"
        ],
        "x": 235,
        "y": 100,
        "wires": [
            [
                "82389d5.4f8aee"
            ]
        ]
    },
    {
        "id": "3a803d32.9f2f52",
        "type": "link out",
        "z": "ac3b7d6e.3a52",
        "name": "Init Tracker #1",
        "links": [
            "f0a7df6d.583f48",
            "263abd04.efbae2",
            "e9a5704b.e0477",
            "ce8b025c.2ee7c8",
            "acb07848.f82168",
            "d5447348.3ac56"
        ],
        "x": 735,
        "y": 320,
        "wires": []
    },
    {
        "id": "ce8b025c.2ee7c8",
        "type": "link in",
        "z": "79d32cd8.ef96ec",
        "name": "Init Dashboard",
        "links": [
            "3a803d32.9f2f52"
        ],
        "x": 115,
        "y": 220,
        "wires": [
            [
                "b59c7fa0.f40a08",
                "f0b2c022.df819",
                "38fd1df3.0306ca",
                "f2799a68.3216c"
            ]
        ]
    },
    {
        "id": "9133b42a.1a291",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Reload the Geolocation transaction history from the Blockchain",
        "info": "",
        "x": 660,
        "y": 480,
        "wires": []
    },
    {
        "id": "58716d50.7ef35c",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Initialize the Asset Tracking Map Dashboard",
        "info": "",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "34d4030.592747e",
        "type": "change",
        "z": "ac3b7d6e.3a52",
        "name": "Set HyperLedgerFabricIP",
        "rules": [
            {
                "t": "set",
                "p": "HyperLedgerFabricIP",
                "pt": "global",
                "to": "<your Hyperledger Fabric Public IP>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "66a1f7a7.a9cfa8"
            ]
        ]
    },
    {
        "id": "41ba1fe5.aad588",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Set Particle Electron vars",
        "rules": [
            {
                "t": "set",
                "p": "ParticleElectron",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "msg",
                "to": "ParticleAccessToken",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 100,
        "wires": [
            [
                "d3ea2b16.01aff8"
            ]
        ]
    },
    {
        "id": "7e4c0d5a.f16ba4",
        "type": "change",
        "z": "5e102eff.67646",
        "name": "Particle Electron to Monitor",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "devid",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "ea421aa8.1eb238",
                "68d9fa1b.1b2a2c",
                "bde6465e.7a19d"
            ]
        ]
    },
    {
        "id": "e9a5704b.e0477",
        "type": "link in",
        "z": "5e102eff.67646",
        "name": "Init Particle Receiver",
        "links": [
            "3a803d32.9f2f52",
            "8034c2c.14a97c"
        ],
        "x": 95,
        "y": 80,
        "wires": [
            [
                "7e4c0d5a.f16ba4"
            ]
        ]
    },
    {
        "id": "1c58e6f3.dc7759",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Select the Particle Electron to monitor",
        "info": "",
        "x": 580,
        "y": 360,
        "wires": []
    },
    {
        "id": "8034c2c.14a97c",
        "type": "link out",
        "z": "56f9cd86.fe4934",
        "name": "Select a Particle",
        "links": [
            "e9a5704b.e0477",
            "acb07848.f82168",
            "d5447348.3ac56"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "f0612b84.c373c",
        "type": "function",
        "z": "56f9cd86.fe4934",
        "name": "Load Dropdown",
        "func": "// msg.options should be an array of [\"label\":\"value\"] pairs\nmsg.options = [ {\"Electron 3G #1\":global.get(\"ParticleDeviceID\") },\n                {\"Electron 2G #2\":\"32\"}\n              ];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 175,
        "y": 180,
        "wires": [
            [
                "4a6a6d92.37ab8c"
            ]
        ]
    },
    {
        "id": "263abd04.efbae2",
        "type": "link in",
        "z": "56f9cd86.fe4934",
        "name": "",
        "links": [
            "3a803d32.9f2f52"
        ],
        "x": 55,
        "y": 180,
        "wires": [
            [
                "f0612b84.c373c"
            ]
        ]
    },
    {
        "id": "e8c258d1.99fd98",
        "type": "comment",
        "z": "ac3b7d6e.3a52",
        "name": "Initialize the Particle Electron to monitor",
        "info": "",
        "x": 590,
        "y": 400,
        "wires": []
    },
    {
        "id": "ac5fea78.7cf178",
        "type": "change",
        "z": "ac3b7d6e.3a52",
        "name": "Particle Electron to Monitor",
        "rules": [
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "global",
                "to": "<your Particle Device ID>",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "global",
                "to": "<your Particle Access Token>",
                "tot": "str"
            },            
            {
                "t": "set",
                "p": "HyperLedgerFabricIP",
                "pt": "global",
                "to": "<your Hyperledger Fabric Public IP>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 320,
        "wires": [
            [
                "3a803d32.9f2f52"
            ]
        ]
    },
    {
        "id": "d5447348.3ac56",
        "type": "link in",
        "z": "5e102eff.67646",
        "name": "Init Particle Receiver",
        "links": [
            "3a803d32.9f2f52",
            "8034c2c.14a97c"
        ],
        "x": 95,
        "y": 540,
        "wires": [
            [
                "c359da40.084ad"
            ]
        ]
    },
    {
        "id": "c359da40.084ad",
        "type": "change",
        "z": "5e102eff.67646",
        "name": "Particle Electron to Monitor",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "evtname",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"hook-response/deviceLocator/\"& msg.ParticleDeviceID & \"/0\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 540,
        "wires": [
            [
                "a2dfbda6.1ac89"
            ]
        ]
    },
    {
        "id": "54460fa4.f4aa9",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Prep Particle.io URL",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "msg",
                "to": "ParticleAccessToken",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 215,
        "y": 700,
        "wires": [
            [
                "838dd8e8.7a3848",
                "9f6bb856.935a9"
            ]
        ]
    },
    {
        "id": "451a312a.6078a8",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Prep Particle.io URL",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "msg",
                "to": "ParticleAccessToken",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 215,
        "y": 540,
        "wires": [
            [
                "71a86a59.45d0bc",
                "a2396343.7d1fb8"
            ]
        ]
    },
    {
        "id": "f07810b9.9211f8",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Prep Particle.io URL",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "msg",
                "to": "ParticleAccessToken",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 980,
        "wires": [
            [
                "1dcd44c5.c040a3",
                "4f0a0cd3.67588c"
            ]
        ]
    },
    {
        "id": "a51a60d6.5e1568",
        "type": "change",
        "z": "56f9cd86.fe4934",
        "name": "Prep Particle.io URL",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\"Content-Type\":\"application/x-www-form-urlencoded\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "ParticleDeviceID",
                "pt": "msg",
                "to": "ParticleDeviceID",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "ParticleAccessToken",
                "pt": "msg",
                "to": "ParticleAccessToken",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 295,
        "y": 815,
        "wires": [
            [
                "8fd4c2dc.889fb",
                "86b0be76.980de8"
            ]
        ]
    },
    {
        "id": "3f540e6.d9f7672",
        "type": "ParticleFunc out",
        "z": "56f9cd86.fe4934",
        "baseurl": "393d1778.26aef",
        "devid": "<your Particle Device ID>",
        "fname": "GetRecentXYZ",
        "param": "",
        "once": false,
        "repeat": 0,
        "consolelog": true,
        "x": 570,
        "y": 1200,
        "wires": [
            [
                "26d52b7f.ad3fb4"
            ]
        ]
    },
    {
        "id": "26d52b7f.ad3fb4",
        "type": "debug",
        "z": "56f9cd86.fe4934",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 870,
        "y": 1200,
        "wires": []
    },
    {
        "id": "7582a45e.11e534",
        "type": "inject",
        "z": "56f9cd86.fe4934",
        "name": "GetRecentXYZ using a ParticleFunc node",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "3f540e6.d9f7672"
            ]
        ]
    },
    {
        "id": "240a5098.d33d18",
        "type": "change",
        "z": "5e11e736.5672e",
        "name": "Begin Perishable Shipment Demo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"$class\":\"org.acme.shipping.perishable.SetupDemo\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "FabricIP",
                "pt": "msg",
                "to": "HyperLedgerFabricIP",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 385,
        "y": 100,
        "wires": [
            [
                "5453caaf.c7c4fc",
                "43571895.f2af28"
            ]
        ]
    },
    {
        "id": "a1acd08a.18871",
        "type": "comment",
        "z": "56f9cd86.fe4934",
        "name": "Not used - another / less accurate technique to query the Particle Electron",
        "info": "",
        "x": 290,
        "y": 1115,
        "wires": []
    },
    {
        "id": "98b38b5.7cdcdf8",
        "type": "comment",
        "z": "5e102eff.67646",
        "name": "Unused but useful to see Device Locator events arrive",
        "info": "",
        "x": 910,
        "y": 640,
        "wires": []
    }
]
