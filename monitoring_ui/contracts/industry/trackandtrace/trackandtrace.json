{
    "id": "https://github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractminimalsample/minimal.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "API": {
            "$ref": "github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform/schema/IOTCPschema.json/#definitions/API",
            "createAssetSurgicalKit": {
                "type": "object",
                "description": "Creates a new surgicalkit (e.g. put new)",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "createAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "surgicalkit": {
                                    "$ref": "#/definitions/Model/surgicalkit"
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "replaceAssetSurgicalKit": {
                "type": "object",
                "description": "Replaces a surgicalkit's state (e.g. put existing)",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "replaceAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "surgicalkit": {
                                    "$ref": "#/definitions/Model/surgicalkit"
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "updateAssetSurgicalKit": {
                "type": "object",
                "description": "Update a contaner's state with one or more property changes (e.g. patch existing)",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "updateAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "surgicalkit": {
                                    "$ref": "#/definitions/Model/surgicalkit"
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "deleteAssetSurgicalKit": {
                "type": "object",
                "description": "Delete a surgicalkit from world state, transactions remain on the blockchain",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "deleteAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/Model/surgicalkitKey"
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "deleteAssetStateHistorySurgicalKit": {
                "type": "object",
                "description": "Delete a surgicalkit's history from world state, transactions remain on the blockchain",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "deleteAssetStateHistorySurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/Model/surgicalkitKey"
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "deletePropertiesFromAssetSurgicalKit": {
                "type": "object",
                "description": "Delete one or more properties from a surgicalkit's state, an example being temperature, which is only relevant for sensitive (as in frozen) shipments",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "deletePropertiesFromAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/Model/surgicalkitKey",
                                "qprops": {
                                    "type": "array",
                                    "description": "Qualified property names, e.g. surgicalkit.skitID",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    }
                }
            },
            "deleteAllAssetsSurgicalKit": {
                "type": "object",
                "description": "Delete all surgicalkits from world state, supports filters",
                "properties": {
                    "method": "invoke",
                    "function": {
                        "type": "string",
                        "enum": [
                            "deleteAllAssetsSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "filter": {
                                    "$ref": "#/definitions/Model/stateFilter"
                                }
                            }
                        },
                        "minItems": 0,
                        "maxItems": 1
                    }
                }
            },
            "readAssetSurgicalKit": {
                "type": "object",
                "description": "Returns the state a surgicalkit",
                "properties": {
                    "method": "query",
                    "function": {
                        "type": "string",
                        "enum": [
                            "readAssetSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/Model/surgicalkitKey"
                            }
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "result": {
                        "$ref": "#/definitions/Model/surgicalkitstate"
                    }
                }
            },
            "readAllAssetsSurgicalKit": {
                "type": "object",
                "description": "Returns the state of all surgicalkits, supports filters",
                "properties": {
                    "method": "query",
                    "function": {
                        "type": "string",
                        "enum": [
                            "readAllAssetsSurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "filter": {
                                    "$ref": "#/definitions/Model/stateFilter"
                                }
                            }
                        },
                        "minItems": 0,
                        "maxItems": 1
                    },
                    "result": {
                        "$ref": "#/definitions/Model/surgicalkitstatearray"
                    }
                }
            },
            "readAssetStateHistorySurgicalKit": {
                "type": "object",
                "description": "Returns history states for a surgicalkit",
                "properties": {
                    "method": "query",
                    "function": {
                        "type": "string",
                        "enum": [
                            "readAssetStateHistorySurgicalKit"
                        ]
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "$ref": "#/definitions/Model/surgicalkitKey",
                                "daterange": {
                                    "$ref": "#/definitions/Model/dateRange"
                                },
                                "filter": {
                                    "$ref": "#/definitions/Model/stateFilter"
                                }
                            },
                            "required": [
                                "surgicalkit"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "result": {
                        "$ref": "#/definitions/Model/surgicalkitstatearray"
                    }
                }
            }
        },
        "Model": {
            "$ref": "github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform/schema/IOTCPschema.json/#definitions/Model",
            "skitID": {
                "type": "string",
                "description": "A surgicalkit's ID"
            },
            "status": {
                "type": "string",
                "description": "current kit status as a named entity in possession of the kit",
                "enum": [
                    "",
                    "oem",
                    "warehouse",
                    "dealer",
                    "retailer",
                    "hospital",
                    "scrapped"
                ]
            },
            "sensors": {
                "type": "object",
                "description": "sensor readings for the surgical kit",
                "properties": {
                    "begin": {
                        "type": "string",
                        "description": "timestamp formatted yyyy-mm-dd hh:mm:ss",
                        "format": "date-time",
                        "sample": "yyyy-mm-dd hh:mm:ss"
                    },
                    "end": {
                        "type": "string",
                        "description": "timestamp formatted yyyy-mm-dd hh:mm:ss",
                        "format": "date-time",
                        "sample": "yyyy-mm-dd hh:mm:ss"
                    },
                    "startlocation": {
                        "$ref": "#/definitions/Model/geo"
                    },
                    "endlocation": {
                        "$ref": "#/definitions/Model/geo"
                    },
                    "maxgforce": {
                        "type": "number",
                        "description": "The highest (in Gs) force that the kit experienced during the sample"
                    },
                    "currtilt": {
                        "type": "number",
                        "description": "The current tilt that the kit is experiencing"
                    },
                    "maxtilt": {
                        "type": "number",
                        "description": "The highest (in degrees from horizontal) tilt that the kit experienced during the sample"
                    }
                }
            },
            "hospital": {
                "type": "object",
                "description": "the hospital within which the surgical kit is used, and within which it is geofenced",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "streetandnumber": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "postcode": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            }
                        }
                    },
                    "fence": {
                        "type": "object",
                        "properties": {
                            "center": {
                                "$ref": "#/definitions/Model/geo"
                            },
                            "radius": {
                                "type": "number"
                            }
                        }
                    }
                }
            },
            "transit": {
                "type": "object",
                "description": "shipping data during transit periods",
                "properties": {
                    "shipper": {
                        "$ref": "#/definitions/Model/status"
                    },
                    "receiver": {
                        "$ref": "#/definitions/Model/status"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "begintransit": {
                        "type": "string",
                        "description": "timestamp formatted yyyy-mm-dd hh:mm:ss",
                        "format": "date-time",
                        "sample": "yyyy-mm-dd hh:mm:ss"
                    },
                    "endtransit": {
                        "type": "string",
                        "description": "timestamp formatted yyyy-mm-dd hh:mm:ss",
                        "format": "date-time",
                        "sample": "yyyy-mm-dd hh:mm:ss"
                    }
                }
            },
            "surgicalkit": {
                "type": "object",
                "description": "The changeable properties for a surgicalkit, also considered its 'event' as a partial state",
                "properties": {
                    "common": {
                        "$ref": "#/definitions/Model/ioteventcommon"
                    },
                    "skitID": {
                        "$ref": "#/definitions/Model/skitID"
                    },
                    "status": {
                        "$ref": "#/definitions/Model/status"
                    },
                    "sensors": {
                        "$ref": "#/definitions/Model/sensors"
                    },
                    "hospital": {
                        "$ref": "#/definitions/Model/hospital"
                    },
                    "transit": {
                        "$ref": "#/definitions/Model/transit"
                    }
                },
                "required": [
                    "skitID"
                ]
            },
            "surgicalkitKey": {
                "surgicalkit": {
                    "type": "object",
                    "properties": {
                        "skitID": {
                            "$ref": "#/definitions/Model/skitID"
                        }
                    }
                }
            },
            "surgicalkitstate": {
                "type": "object",
                "description": "A surgicalkit's complete state",
                "properties": {
                    "class": {
                        "$ref": "#/definitions/Model/assetClass"
                    },
                    "AssetKey": {
                        "type": "string",
                        "description": "This surgicalkit's world state surgicalkit ID"
                    },
                    "state": {
                        "type": "object",
                        "description": "Properties that have been received or calculated for this surgicalkit",
                        "properties": {
                            "surgicalkit": {
                                "$ref": "#/definitions/Model/surgicalkit"
                            },
                            "distanceFromCenter": {
                                "type": "number",
                                "description": "calculated distance from the fence center, can be compared to fence radius"
                            }
                        }
                    },
                    "eventin": {
                        "type": "object",
                        "description": "The contract event that created this state, for example updateAssetSurgicalKit",
                        "properties": {
                            "surgicalkit": {
                                "$ref": "#/definitions/Model/surgicalkit"
                            }
                        }
                    },
                    "txnts": {
                        "type": "string",
                        "description": "Transaction timestamp matching the blockchain"
                    },
                    "txnid": {
                        "type": "string",
                        "description": "Transaction UUID matching the blockchain"
                    },
                    "eventout": {
                        "type": "object",
                        "description": "The chaincode event emitted on invoke exit, if any",
                        "properties": {
                            "surgicalkit": {
                                "$ref": "#/definitions/Model/invokeevent"
                            }
                        }
                    },
                    "alerts": {
                        "$ref": "#/definitions/Model/alertNameArray"
                    },
                    "compliant": {
                        "type": "boolean",
                        "description": "This surgicalkit has no active alerts"
                    }
                }
            },
            "surgicalkitstateexternal": {
                "type": "object",
                "patternProperties": {
                    "^CON": {
                        "type": "object",
                        "description": "The external state of one surgicalkit asset, named by its world state ID",
                        "$ref": "#/definitions/Model/surgicalkitstate"
                    }
                }
            },
            "surgicalkitstatearray": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/Model/surgicalkitstateexternal"
                },
                "minItems": 0,
                "description": "Array of surgicalkit states, can mix asset classes"
            }
        }
    }
}