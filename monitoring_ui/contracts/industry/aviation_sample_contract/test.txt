JSON CONFIG FILEPATH:
   /local-dev/github.com/blockchain-samples/aviation_sample_hyperledger/scripts/generate.json
*********** REPLACE REFERENCES IN SCHEMA **************
 <nil>
MAP [info:map[description:Interact with the API and schema for IoT trade lane sample contract. Based on the CRUD contract pattern, which is implemented as a pseudo-RPC payload in the chain code inputs (function string and args string array) of the deploy, invoke and query end points. Similar in concept to a JSON-RPC encoding. Note that the interface shown in this schema defines the chaincode inputs as an array of objects, but those objects are always in fact a single JSON encoded string. The sections before Definitions are redacted versions of the rest_api.json file in the Open Block Chain project. This schema builds on the paths by defining the payloads for the devops resource APIs. This file can be explored in the Swagger GUI, but it throws an error on the choice verb 'oneOf', which is very useful for defining payloads related to one endpoint, such as query. This schema uses references everywhere to avoid data duplication, but the generate command runs a script that can resolve all references and create a schema with all data fully realized. version:3.1 title:IBM IoT Blockchain Trade Lane Sample Contract API]]
DEFAULT: k: [version] type: [3.1]
DEFAULT: k: [title] type: [IBM IoT Blockchain Trade Lane Sample Contract API]
DEFAULT: k: [description] type: [Interact with the API and schema for IoT trade lane sample contract. Based on the CRUD contract pattern, which is implemented as a pseudo-RPC payload in the chain code inputs (function string and args string array) of the deploy, invoke and query end points. Similar in concept to a JSON-RPC encoding. Note that the interface shown in this schema defines the chaincode inputs as an array of objects, but those objects are always in fact a single JSON encoded string. The sections before Definitions are redacted versions of the rest_api.json file in the Open Block Chain project. This schema builds on the paths by defining the payloads for the devops resource APIs. This file can be explored in the Swagger GUI, but it throws an error on the choice verb 'oneOf', which is very useful for defining payloads related to one endpoint, such as query. This schema uses references everywhere to avoid data duplication, but the generate command runs a script that can resolve all references and create a schema with all data fully realized.]
DEFAULT: k: [host] type: [127.0.0.1:3000]
ARR [schemes:[http]]
ARR [produces:[application/json]]
MAP [paths:map[/chaincode:map[post:map[description:The /chaincode endpoint receives requests to deploy, invoke, and query a target Chaincode. This service endpoint implements the JSON RPC 2.0 specification with the payload identifying the desired Chaincode operation within the 'method' property. tags:[Chaincode] operationId:chaincodeOp parameters:[map[description:Chaincode JSON RPC 2.0 payload required:true schema:map[$ref:#/definitions/ChaincodeOpPayload] name:ChaincodeOpPayload in:body]] responses:map[default:map[description:Chaincode operation failed schema:map[$ref:#/definitions/ChaincodeOpFailure]] 200:map[description:Chaincode operation successful schema:map[$ref:#/definitions/ChaincodeOpSuccess]]] summary:Service endpoint for Chaincode operations]]]]
MAP [/chaincode:map[post:map[parameters:[map[name:ChaincodeOpPayload in:body description:Chaincode JSON RPC 2.0 payload required:true schema:map[$ref:#/definitions/ChaincodeOpPayload]]] responses:map[200:map[description:Chaincode operation successful schema:map[$ref:#/definitions/ChaincodeOpSuccess]] default:map[description:Chaincode operation failed schema:map[$ref:#/definitions/ChaincodeOpFailure]]] summary:Service endpoint for Chaincode operations description:The /chaincode endpoint receives requests to deploy, invoke, and query a target Chaincode. This service endpoint implements the JSON RPC 2.0 specification with the payload identifying the desired Chaincode operation within the 'method' property. tags:[Chaincode] operationId:chaincodeOp]]]
MAP [post:map[description:The /chaincode endpoint receives requests to deploy, invoke, and query a target Chaincode. This service endpoint implements the JSON RPC 2.0 specification with the payload identifying the desired Chaincode operation within the 'method' property. tags:[Chaincode] operationId:chaincodeOp parameters:[map[description:Chaincode JSON RPC 2.0 payload required:true schema:map[$ref:#/definitions/ChaincodeOpPayload] name:ChaincodeOpPayload in:body]] responses:map[default:map[description:Chaincode operation failed schema:map[$ref:#/definitions/ChaincodeOpFailure]] 200:map[description:Chaincode operation successful schema:map[$ref:#/definitions/ChaincodeOpSuccess]]] summary:Service endpoint for Chaincode operations]]
DEFAULT: k: [summary] type: [Service endpoint for Chaincode operations]
DEFAULT: k: [description] type: [The /chaincode endpoint receives requests to deploy, invoke, and query a target Chaincode. This service endpoint implements the JSON RPC 2.0 specification with the payload identifying the desired Chaincode operation within the 'method' property.]
ARR [tags:[Chaincode]]
DEFAULT: k: [operationId] type: [chaincodeOp]
ARR [parameters:[map[name:ChaincodeOpPayload in:body description:Chaincode JSON RPC 2.0 payload required:true schema:map[$ref:#/definitions/ChaincodeOpPayload]]]]
DEFAULT: k: [name] type: [ChaincodeOpPayload]
DEFAULT: k: [in] type: [body]
DEFAULT: k: [description] type: [Chaincode JSON RPC 2.0 payload]
DEFAULT: k: [required] type: [%!s(bool=true)]
MAP [schema:map[$ref:#/definitions/ChaincodeOpPayload]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] method:map[description:the command's service endpoint for deployment, invocation or query type:string enum:[deploy invoke query]] params:map[$ref:#/definitions/ChaincodeSpec description:A required Chaincode specification message identifying the target chaincode.] id:map[type:integer format:int64 description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]]]
MAP [jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [method:map[type:string enum:[deploy invoke query] description:the command's service endpoint for deployment, invocation or query]]
ARR [enum:[deploy invoke query]]
DEFAULT: k: [description] type: [the command's service endpoint for deployment, invocation or query]
DEFAULT: k: [type] type: [string]
MAP [params:map[$ref:#/definitions/ChaincodeSpec description:A required Chaincode specification message identifying the target chaincode.]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[ctorMsg:map[$ref:#/definitions/ChaincodeInput description:Specific function to execute within the Chaincode.] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[$ref:#/definitions/ConfidentialityLevel description:Confidentiality level of the Chaincode.] type:map[enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG example:GOLANG] chaincodeID:map[description:Unique Chaincode identifier. $ref:#/definitions/ChaincodeID]]]
MAP [ctorMsg:map[$ref:#/definitions/ChaincodeInput description:Specific function to execute within the Chaincode.]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a deploy, invoke or query message]
ARR [oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputDeploy]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputInvoke]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputQuery]
MAP [secureContext:map[type:string description:Username when security is enabled.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Username when security is enabled.]
MAP [confidentialityLevel:map[description:Confidentiality level of the Chaincode. $ref:#/definitions/ConfidentialityLevel]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [PUBLIC]
DEFAULT: k: [example] type: [PUBLIC]
ARR [enum:[PUBLIC CONFIDENTIAL]]
DEFAULT: k: [description] type: [Confidentiality level of the Chaincode.]
MAP [type:map[example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG]]
ARR [enum:[UNDEFINED GOLANG NODE]]
DEFAULT: k: [description] type: [Chaincode specification language.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [GOLANG]
DEFAULT: k: [example] type: [GOLANG]
MAP [chaincodeID:map[description:Unique Chaincode identifier. $ref:#/definitions/ChaincodeID]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]
MAP [path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode location in the file system. This value is required by the deploy transaction.]
MAP [name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode name identifier. This value is required by the invoke and query transactions.]
MAP [id:map[type:integer format:int64 description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [description] type: [An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]
ARR [required:[jsonrpc method params id]]
MAP [responses:map[200:map[description:Chaincode operation successful schema:map[$ref:#/definitions/ChaincodeOpSuccess]] default:map[description:Chaincode operation failed schema:map[$ref:#/definitions/ChaincodeOpFailure]]]]
MAP [200:map[schema:map[$ref:#/definitions/ChaincodeOpSuccess] description:Chaincode operation successful]]
DEFAULT: k: [description] type: [Chaincode operation successful]
MAP [schema:map[$ref:#/definitions/ChaincodeOpSuccess]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] result:map[$ref:#/definitions/rpcResponse description:The value of this element is determined by the method invoked on the server.] id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object.]]]
MAP [jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [result:map[$ref:#/definitions/rpcResponse description:The value of this element is determined by the method invoked on the server.]]
MAP [properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[type:string default:500 description:Additional information about the response or values returned.]]]
MAP [Message:map[description:Additional information about the response or values returned. type:string default:500]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [500]
DEFAULT: k: [description] type: [Additional information about the response or values returned.]
MAP [Status:map[type:string default:OK description:A string confirming successful request execution.]]
DEFAULT: k: [default] type: [OK]
DEFAULT: k: [description] type: [A string confirming successful request execution.]
DEFAULT: k: [type] type: [string]
ARR [required:[Status]]
DEFAULT: k: [type] type: [object]
MAP [id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object.]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=123)]
DEFAULT: k: [description] type: [This number will be the same as the value of the id member in the request object.]
ARR [required:[jsonrpc result id]]
MAP [default:map[description:Chaincode operation failed schema:map[$ref:#/definitions/ChaincodeOpFailure]]]
DEFAULT: k: [description] type: [Chaincode operation failed]
MAP [schema:map[$ref:#/definitions/ChaincodeOpFailure]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[error:map[$ref:#/definitions/rpcError description:A structured value specifying the code and description of the error that occurred.] id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.] jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]]
MAP [jsonrpc:map[default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [error:map[$ref:#/definitions/rpcError description:A structured value specifying the code and description of the error that occurred.]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[message:map[type:string default:Parse error description:A string providing a short description of the error.] data:map[description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.). type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input] code:map[description:A number that indicates the error type that occurred. type:integer format:int64 default:-32700]]]
MAP [code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=-32700)]
DEFAULT: k: [description] type: [A number that indicates the error type that occurred.]
MAP [message:map[default:Parse error description:A string providing a short description of the error. type:string]]
DEFAULT: k: [description] type: [A string providing a short description of the error.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Parse error]
MAP [data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Error unmarshalling chaincode request payload: unexpected end of JSON input]
DEFAULT: k: [description] type: [A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]
ARR [required:[code message]]
MAP [id:map[description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null. type:integer format:int64 default:123]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=123)]
DEFAULT: k: [description] type: [This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.]
ARR [required:[jsonrpc error id]]
MAP [definitions:map[API:map[type:object description:The API for the tradelane sample contract consisting of the init function, the crud functions to change state, and a set of query functions for asset state, asset history, recent states, and so on. properties:map[readAsset:map[type:object description:Returns the state an asset. Argument is a JSON encoded string. The arg is an 'assetID' property. properties:map[method:query function:map[type:string enum:[readAsset] description:readAsset function] args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey]] result:map[$ref:#/definitions/state]]] readAllAssets:map[type:object description:Returns the state of all assets as an array of JSON encoded strings. Accepts no arguments. For each managed asset, the state is read from the ledger and added to the returned array. Array is sorted by 'assetID'. properties:map[method:query function:map[type:string enum:[readAllAssets] description:readAllAssets function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[$ref:#/definitions/stateArray]]] setCreateOnUpdate:map[type:object description:Allow updateAsset to redirect to createAsset when 'assetID' does not exist. properties:map[function:map[description:setCreateOnUpdate function type:string enum:[setCreateOnUpdate]] args:map[maxItems:1 description:True for redirect allowed, false for error on asset does not exist. type:array items:map[setCreateOnUpdate:map[type:boolean]] minItems:1] method:invoke]] updateAsset:map[properties:map[method:invoke function:map[type:string enum:[updateAsset] description:updateAsset function] args:map[type:array items:map[$ref:#/definitions/event] minItems:1 maxItems:1 description:args are JSON encoded strings]] type:object description:Update the state of an asset. The one argument is a JSON encoded event. The 'assetID' property is required along with one or more writable properties. Establishes the next asset state. ] deletePropertiesFromAsset:map[type:object description:Delete one or more properties from an asset's state. Argument is a JSON encoded string containing an 'assetID' and an array of qualified property names. For example, in an event object containing common and custom properties objects, the argument might look like {'assetID':'A1',['common.location', 'custom.carrier', 'custom.temperature']} and the result of that invoke would be the removal of the location, carrier and temperature properties. The missing temperature would clear a 'OVERTEMP' alert when the rules engine runs. properties:map[method:invoke function:map[type:string enum:[deletePropertiesFromAsset] description:deletePropertiesFromAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDandPropertyArray] minItems:1 maxItems:1 description:args are JSON encoded strings]]] readAssetSchemas:map[type:object description:Returns a string generated from the schema that contains APIs and Objects as specified in the file 'generate.json' in the /scripts folder. properties:map[method:query function:map[type:string enum:[readAssetSchemas] description:readAssetSchemas function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[type:string description:JSON encoded object containing selected schemas]]] readRecentStates:map[type:object description:Returns the state of recently updated assets as an array of objects sorted with the most recently updated asset first. Each asset appears exactly once up to a maxmum of 20 in this version of the contract. properties:map[function:map[type:string enum:[readRecentStates] description:readRecentStates function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/stateArrayRecentFirst] method:query]] setLoggingLevel:map[properties:map[method:invoke function:map[type:string enum:[setLoggingLevel] description:setLoggingLevel function] args:map[type:array items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]] minItems:1 maxItems:1 description:logging levels indicate what you see]] type:object description:Sets the logging level in the contract.] init:map[description:Initializes the contract when started, either by deployment or by peer restart. properties:map[args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/initEvent] minItems:1] method:deploy function:map[type:string enum:[init] description:init function]] type:object] createAsset:map[type:object description:Create an asset. One argument, a JSON encoded event. The 'assetID' property is required with zero or more writable properties. Establishes an initial asset state. properties:map[function:map[type:string enum:[createAsset] description:createAsset function] args:map[type:array items:map[$ref:#/definitions/event] minItems:1 maxItems:1 description:args are JSON encoded strings] method:invoke]] readAssetHistory:map[properties:map[result:map[$ref:#/definitions/stateArrayRecentFirst] method:query function:map[type:string enum:[readAssetHistory] description:readAssetHistory function] args:map[type:array items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1 description:args are JSON encoded strings]] type:object description:Requests a specified number of history states for an assets. Returns an array of states sorted with the most recent first. The 'assetID' property is required and the count property is optional. A missing count, a count of zero, or too large a count returns all existing history states.] readAssetSamples:map[properties:map[result:map[type:string description:JSON encoded object containing selected sample data] method:query function:map[type:string enum:[readAssetSamples] description:readAssetSamples function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]] type:object description:Returns a string generated from the schema that contains sample Objects as specified in the file 'generate.json' in the /scripts folder.] deleteAsset:map[type:object description:Delete an asset, its history, and any recent state activity. Argument is a JSON encoded string containing only an 'assetID'. properties:map[method:invoke function:map[enum:[deleteAsset] description:deleteAsset function type:string] args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey]]]] deleteAllAssets:map[type:object description:Delete the state of all assets. No arguments are accepted. For each managed asset, the state and history are erased, and the asset is removed if necessary from recent states. properties:map[method:invoke function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]] readContractState:map[type:object description:Returns the state of the contract, which includes its version, its nickname and a list of 'assetID's that are currently managed. properties:map[function:map[type:string enum:[readContractState] description:readContractState function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/contractState] method:query]]]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] assetIDKey:map[type:object description:An object containing only an 'assetID' for use as an argument to read or delete. properties:map[assetID:map[$ref:#/definitions/assetID]]] state:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[assetID:map[$ref:#/definitions/assetID] timestamp:map[type:string description:Device timestamp.] location:map[$ref:#/definitions/geo] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[description:A contract-specific indication that this asset is compliant. type:boolean] extension:map[properties:map[] type:object description:Application-managed state. Opaque to contract.] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[$ref:#/definitions/alertStatus] lastEvent:map[$ref:#/definitions/eventWithFunction]]] ConfidentialityLevel:map[enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string default:PUBLIC example:PUBLIC] ChaincodeInput:map[description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]] type:object] ChaincodeInputQuery:map[type:object description:the payload for a query message oneOf:[map[$ref:#/definitions/API/readAsset] map[$ref:#/definitions/API/readAllAssets] map[$ref:#/definitions/API/readAssetHistory] map[$ref:#/definitions/API/readAssetSamples] map[$ref:#/definitions/API/readAssetSchemas] map[$ref:#/definitions/API/readRecentStates] map[$ref:#/definitions/API/readContractState] map[$ref:#/definitions/API/readContractObjectModel]]] nickname:map[type:string default:TRADELANE description:The nickname of the current contract] airplane:map[description:The set of writable properties that define an airplane's state. properties:map[model:map[type:string description:The airplane model or family name.] variant:map[type:string description:A manufacturer-specific variant identifier for this airplane.] assemblies:map[type:array description:An array of assembly IDs belonging to this airplane. items:map[$ref:#/definitions/assetID]] activities:map[type:array description:An array of activity IDs that occured on this airplane. items:map[$ref:#/definitions/assetID]]] required:[model] type:object] ChaincodeOpPayload:map[type:object properties:map[params:map[type:object properties:map[type:map[type:string default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language.] chaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]] ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode.]]] id:map[type:integer format:int64 description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.] jsonrpc:map[default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'. type:string] method:map[description:the command's service endpoint for deployment, invocation or query type:string enum:[deploy invoke query]]] required:[jsonrpc method params id]] ChaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]] rpcResponse:map[type:object properties:map[Status:map[description:A string confirming successful request execution. type:string default:OK] Message:map[type:string default:500 description:Additional information about the response or values returned.]] required:[Status]] version:map[type:string description:The version number of the current contract] eventWithFunction:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] contractState:map[type:object properties:map[version:map[$ref:#/definitions/version] nickname:map[$ref:#/definitions/nickname] activeAssets:map[type:array description:array containing actively managed asset IDs items:map[$ref:#/definitions/assetID]]]] ChaincodeSpec:map[type:object properties:map[type:map[enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG example:GOLANG] chaincodeID:map[properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]] type:object] ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string default:PUBLIC example:PUBLIC]]] assembly:map[description:The set of writable properties that define an assembly's state. properties:map[parts:map[items:map[$ref:#/definitions/assetID quantity:integer] type:array description:An array of part IDs belonging to this assembly.] activities:map[type:array description:An array of activity IDs that occured on this assembly. items:map[$ref:#/definitions/assetID]] ATAcode:map[type:string description:The ATA code defining the assembly type, e.g. 32=landing gear, 32-50=steering.] name:map[type:string description:The assembly name.] ALRS:map[type:string description:Alerting service zone.] lifeLimitInitial:map[type:string description:Initial assembly life limit.] lifeLimitUsed:map[type:string description:Assembly life limit that has been used, including adjustments.]] required:[ATAcode name] type:object] event:map[type:object description:The set of writable properties that define an asset's state. For asset creation, the mandatory property 'assetID' defines a serial number or other unique identifier within its asset class. The specific event type is then selected from the objects in the 'oneOf' property. Creation and update  should include at least one writable property in addition to the assetID. This exemplifies the IoT contract pattern 'partial state as event'. properties:map[assetID:map[$ref:#/definitions/assetID] timestamp:map[type:string description:Device timestamp.] location:map[$ref:#/definitions/geo] extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]] references:map[description:An array of external references relevant to this asset. minItems:0 items:map[type:string] type:array] oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]]] required:[assetID]] ChaincodeInputInvoke:map[type:object description:the payload for an invoke message oneOf:[map[$ref:#/definitions/API/createAsset] map[$ref:#/definitions/API/updateAsset] map[$ref:#/definitions/API/deleteAsset] map[$ref:#/definitions/API/deletePropertiesFromAsset] map[$ref:#/definitions/API/setLoggingLevel] map[$ref:#/definitions/API/setCreateOnUpdate] map[$ref:#/definitions/API/deleteAllAssets]]] ChaincodeOpFailure:map[type:object properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] error:map[properties:map[code:map[default:-32700 description:A number that indicates the error type that occurred. type:integer format:int64] message:map[type:string default:Parse error description:A string providing a short description of the error.] data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]] required:[code message] type:object] id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.]] required:[jsonrpc error id]] alertName:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] airline:map[type:object description:The set of writable properties that define an airline's state. properties:map[code:map[type:string description:The airline 3 letter code.] airplanes:map[type:array description:An array of airplane IDs belonging to this airline. items:map[$ref:#/definitions/assetID]] activities:map[type:array description:An array of activity IDs that occured for this airliine. items:map[$ref:#/definitions/assetID]] name:map[type:string description:The name of the airline.]] required:[name code]] part:map[type:object description:The set of writable properties that define a part's state. properties:map[name:map[type:string description:The part name.] partNumber:map[type:string description:Part number.] vendorName:map[type:string description:Vendor name.] vendorNumber:map[type:string description:Vendor part number.] lifeLimitInitial:map[type:string description:Initial part life limit.] lifeLimitUsed:map[type:string description:Part life limit that has been used, including adjustments.] activities:map[type:array description:An array of activity IDs that occured on this part. items:map[$ref:#/definitions/assetID]]] required:[partNumber name]] activity:map[properties:map[activityType:map[type:string description:The type of the activity.] activityNumber:map[type:string description:Activity number.] activityDate:map[type:string description:Date the activity occured (e.g. date from aechive of activities being copied into this ledger).] activityDetail:map[type:string description:Detailed description of the activity.]] required:[type name] type:object description:The set of writable properties that define an activity.] stateArray:map[type:array items:map[$ref:#/definitions/state] minItems:0 description:an array of states, often for different assets] stateArrayRecentFirst:map[type:array items:map[$ref:#/definitions/state] minItems:0 description:an array of states for one asset sorted by timestamp with the most recent entry first] ChaincodeOpSuccess:map[properties:map[id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object.] jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] result:map[type:object properties:map[Status:map[default:OK description:A string confirming successful request execution. type:string] Message:map[description:Additional information about the response or values returned. type:string default:500]] required:[Status]]] required:[jsonrpc result id] type:object] stateArrayRecentFirstMap:map[type:Object description: properties:map[assetID:map[$ref:#/definitions/assetID] statesRecentFirst:map[$ref:#/definitions/stateArrayRecentFirst]]] initEvent:map[type:object properties:map[version:map[$ref:#/definitions/assetID] nickname:map[$ref:#/definitions/nickname]] required:[version] description:event sent to init on deployment] assetIDandCount:map[type:object description:Requested 'assetID' with item 'count'. properties:map[count:map[type:integer] assetID:map[$ref:#/definitions/assetID]] required:[assetID]] rpcError:map[properties:map[data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).] code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.] message:map[type:string default:Parse error description:A string providing a short description of the error.]] required:[code message] type:object] qualPropertyNameArray:map[type:array items:map[description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc. type:string]] ChaincodeInputDeploy:map[oneOf:[map[$ref:#/definitions/API/init]] type:object description:the payload for a deploy message] geo:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] assetIDandPropertyArray:map[type:object description:Requested 'assetID' with a list of qualified property names. properties:map[qualPropsToDelete:map[$ref:#/definitions/qualPropertyNameArray] assetID:map[$ref:#/definitions/assetID]] required:[assetID qualPropsToDelete]] alertStatus:map[description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[cleared:map[type:array items:map[$ref:#/definitions/alertName] minItems:0] active:map[minItems:0 type:array items:map[$ref:#/definitions/alertName]] raised:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]] type:object]]]
MAP [assetIDandCount:map[type:object description:Requested 'assetID' with item 'count'. properties:map[count:map[type:integer] assetID:map[$ref:#/definitions/assetID]] required:[assetID]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Requested 'assetID' with item 'count'.]
MAP [properties:map[count:map[type:integer] assetID:map[$ref:#/definitions/assetID]]]
MAP [count:map[type:integer]]
DEFAULT: k: [type] type: [integer]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
ARR [required:[assetID]]
MAP [initEvent:map[type:object properties:map[version:map[$ref:#/definitions/assetID] nickname:map[$ref:#/definitions/nickname]] required:[version] description:event sent to init on deployment]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[nickname:map[$ref:#/definitions/nickname] version:map[$ref:#/definitions/assetID]]]
MAP [version:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [nickname:map[$ref:#/definitions/nickname]]
DEFAULT: k: [default] type: [TRADELANE]
DEFAULT: k: [description] type: [The nickname of the current contract]
DEFAULT: k: [type] type: [string]
ARR [required:[version]]
DEFAULT: k: [description] type: [event sent to init on deployment]
MAP [qualPropertyNameArray:map[type:array items:map[type:string description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]
MAP [ChaincodeInputDeploy:map[description:the payload for a deploy message oneOf:[map[$ref:#/definitions/API/init]] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a deploy message]
ARR [oneOf:[map[$ref:#/definitions/API/init]]]
DEFAULT: k: [$ref] type: [#/definitions/API/init]
MAP [rpcError:map[type:object properties:map[data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).] code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.] message:map[type:string default:Parse error description:A string providing a short description of the error.]] required:[code message]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[code:map[format:int64 default:-32700 description:A number that indicates the error type that occurred. type:integer] message:map[description:A string providing a short description of the error. type:string default:Parse error] data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]]]
MAP [code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.]]
DEFAULT: k: [description] type: [A number that indicates the error type that occurred.]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=-32700)]
MAP [message:map[default:Parse error description:A string providing a short description of the error. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Parse error]
DEFAULT: k: [description] type: [A string providing a short description of the error.]
MAP [data:map[description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.). type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Error unmarshalling chaincode request payload: unexpected end of JSON input]
DEFAULT: k: [description] type: [A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]
ARR [required:[code message]]
MAP [assetIDandPropertyArray:map[type:object description:Requested 'assetID' with a list of qualified property names. properties:map[qualPropsToDelete:map[$ref:#/definitions/qualPropertyNameArray] assetID:map[$ref:#/definitions/assetID]] required:[assetID qualPropsToDelete]]]
ARR [required:[assetID qualPropsToDelete]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Requested 'assetID' with a list of qualified property names.]
MAP [properties:map[qualPropsToDelete:map[$ref:#/definitions/qualPropertyNameArray] assetID:map[$ref:#/definitions/assetID]]]
MAP [qualPropsToDelete:map[$ref:#/definitions/qualPropertyNameArray]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [alertStatus:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[$ref:#/definitions/alertName] minItems:0] raised:map[type:array items:map[$ref:#/definitions/alertName] minItems:0] cleared:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[active:map[type:array items:map[$ref:#/definitions/alertName] minItems:0] raised:map[minItems:0 type:array items:map[$ref:#/definitions/alertName]] cleared:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]]]
MAP [active:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/alertName]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [raised:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/alertName]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[type:array items:map[$ref:#/definitions/alertName] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/alertName]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [geo:map[properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate type:object]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [assetIDKey:map[description:An object containing only an 'assetID' for use as an argument to read or delete. properties:map[assetID:map[$ref:#/definitions/assetID]] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [An object containing only an 'assetID' for use as an argument to read or delete.]
MAP [properties:map[assetID:map[$ref:#/definitions/assetID]]]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [state:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[assetID:map[$ref:#/definitions/assetID] timestamp:map[type:string description:Device timestamp.] location:map[$ref:#/definitions/geo] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[$ref:#/definitions/alertStatus] lastEvent:map[$ref:#/definitions/eventWithFunction]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[description:Temperature of the asset in CELSIUS. type:number] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[$ref:#/definitions/alertStatus] lastEvent:map[$ref:#/definitions/eventWithFunction] assetID:map[$ref:#/definitions/assetID] timestamp:map[type:string description:Device timestamp.] location:map[$ref:#/definitions/geo] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [type] type: [string]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[$ref:#/definitions/geo]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[longitude:map[type:number] latitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [lastEvent:map[$ref:#/definitions/eventWithFunction]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
DEFAULT: k: [type] type: [array]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [description] type: [function that created this state object]
DEFAULT: k: [type] type: [string]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
MAP [extension:map[description:Application-managed state. Opaque to contract. properties:map[] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[description:Transaction UUID matching that in the blockchain. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[$ref:#/definitions/alertStatus]]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] active:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] raised:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array]]]
MAP [active:map[items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0 type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [object]
MAP [ConfidentialityLevel:map[type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [PUBLIC]
DEFAULT: k: [example] type: [PUBLIC]
ARR [enum:[PUBLIC CONFIDENTIAL]]
DEFAULT: k: [description] type: [Confidentiality level of the Chaincode.]
MAP [API:map[type:object description:The API for the tradelane sample contract consisting of the init function, the crud functions to change state, and a set of query functions for asset state, asset history, recent states, and so on. properties:map[deleteAsset:map[type:object description:Delete an asset, its history, and any recent state activity. Argument is a JSON encoded string containing only an 'assetID'. properties:map[method:invoke function:map[type:string enum:[deleteAsset] description:deleteAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1 description:args are JSON encoded strings]]] deleteAllAssets:map[type:object description:Delete the state of all assets. No arguments are accepted. For each managed asset, the state and history are erased, and the asset is removed if necessary from recent states. properties:map[method:invoke function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function] args:map[maxItems:0 description:accepts no arguments type:array items:map[] minItems:0]]] readContractState:map[description:Returns the state of the contract, which includes its version, its nickname and a list of 'assetID's that are currently managed. properties:map[args:map[description:accepts no arguments type:array items:map[] minItems:0 maxItems:0] result:map[$ref:#/definitions/contractState] method:query function:map[enum:[readContractState] description:readContractState function type:string]] type:object] readAsset:map[type:object description:Returns the state an asset. Argument is a JSON encoded string. The arg is an 'assetID' property. properties:map[args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1] result:map[$ref:#/definitions/state] method:query function:map[type:string enum:[readAsset] description:readAsset function]]] readAllAssets:map[properties:map[result:map[$ref:#/definitions/stateArray] method:query function:map[description:readAllAssets function type:string enum:[readAllAssets]] args:map[maxItems:0 description:accepts no arguments type:array items:map[] minItems:0]] type:object description:Returns the state of all assets as an array of JSON encoded strings. Accepts no arguments. For each managed asset, the state is read from the ledger and added to the returned array. Array is sorted by 'assetID'.] setCreateOnUpdate:map[description:Allow updateAsset to redirect to createAsset when 'assetID' does not exist. properties:map[args:map[description:True for redirect allowed, false for error on asset does not exist. type:array items:map[setCreateOnUpdate:map[type:boolean]] minItems:1 maxItems:1] method:invoke function:map[type:string enum:[setCreateOnUpdate] description:setCreateOnUpdate function]] type:object] updateAsset:map[description:Update the state of an asset. The one argument is a JSON encoded event. The 'assetID' property is required along with one or more writable properties. Establishes the next asset state.  properties:map[args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event] minItems:1] method:invoke function:map[type:string enum:[updateAsset] description:updateAsset function]] type:object] deletePropertiesFromAsset:map[description:Delete one or more properties from an asset's state. Argument is a JSON encoded string containing an 'assetID' and an array of qualified property names. For example, in an event object containing common and custom properties objects, the argument might look like {'assetID':'A1',['common.location', 'custom.carrier', 'custom.temperature']} and the result of that invoke would be the removal of the location, carrier and temperature properties. The missing temperature would clear a 'OVERTEMP' alert when the rules engine runs. properties:map[method:invoke function:map[type:string enum:[deletePropertiesFromAsset] description:deletePropertiesFromAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDandPropertyArray] minItems:1 maxItems:1 description:args are JSON encoded strings]] type:object] readAssetSchemas:map[properties:map[result:map[description:JSON encoded object containing selected schemas type:string] method:query function:map[description:readAssetSchemas function type:string enum:[readAssetSchemas]] args:map[description:accepts no arguments type:array items:map[] minItems:0 maxItems:0]] type:object description:Returns a string generated from the schema that contains APIs and Objects as specified in the file 'generate.json' in the /scripts folder.] readRecentStates:map[type:object description:Returns the state of recently updated assets as an array of objects sorted with the most recently updated asset first. Each asset appears exactly once up to a maxmum of 20 in this version of the contract. properties:map[method:query function:map[type:string enum:[readRecentStates] description:readRecentStates function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[$ref:#/definitions/stateArrayRecentFirst]]] setLoggingLevel:map[properties:map[method:invoke function:map[type:string enum:[setLoggingLevel] description:setLoggingLevel function] args:map[type:array items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]] minItems:1 maxItems:1 description:logging levels indicate what you see]] type:object description:Sets the logging level in the contract.] init:map[description:Initializes the contract when started, either by deployment or by peer restart. properties:map[args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/initEvent] minItems:1 maxItems:1] method:deploy function:map[enum:[init] description:init function type:string]] type:object] createAsset:map[type:object description:Create an asset. One argument, a JSON encoded event. The 'assetID' property is required with zero or more writable properties. Establishes an initial asset state. properties:map[method:invoke function:map[type:string enum:[createAsset] description:createAsset function] args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event]]]] readAssetHistory:map[type:object description:Requests a specified number of history states for an assets. Returns an array of states sorted with the most recent first. The 'assetID' property is required and the count property is optional. A missing count, a count of zero, or too large a count returns all existing history states. properties:map[result:map[$ref:#/definitions/stateArrayRecentFirst] method:query function:map[type:string enum:[readAssetHistory] description:readAssetHistory function] args:map[type:array items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1 description:args are JSON encoded strings]]] readAssetSamples:map[properties:map[result:map[type:string description:JSON encoded object containing selected sample data] method:query function:map[type:string enum:[readAssetSamples] description:readAssetSamples function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]] type:object description:Returns a string generated from the schema that contains sample Objects as specified in the file 'generate.json' in the /scripts folder.]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The API for the tradelane sample contract consisting of the init function, the crud functions to change state, and a set of query functions for asset state, asset history, recent states, and so on.]
MAP [properties:map[readAssetSamples:map[description:Returns a string generated from the schema that contains sample Objects as specified in the file 'generate.json' in the /scripts folder. properties:map[method:query function:map[type:string enum:[readAssetSamples] description:readAssetSamples function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[type:string description:JSON encoded object containing selected sample data]] type:object] init:map[properties:map[method:deploy function:map[type:string enum:[init] description:init function] args:map[type:array items:map[$ref:#/definitions/initEvent] minItems:1 maxItems:1 description:args are JSON encoded strings]] type:object description:Initializes the contract when started, either by deployment or by peer restart.] createAsset:map[type:object description:Create an asset. One argument, a JSON encoded event. The 'assetID' property is required with zero or more writable properties. Establishes an initial asset state. properties:map[method:invoke function:map[enum:[createAsset] description:createAsset function type:string] args:map[type:array items:map[$ref:#/definitions/event] minItems:1 maxItems:1 description:args are JSON encoded strings]]] readAssetHistory:map[properties:map[result:map[$ref:#/definitions/stateArrayRecentFirst] method:query function:map[type:string enum:[readAssetHistory] description:readAssetHistory function] args:map[items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1 description:args are JSON encoded strings type:array]] type:object description:Requests a specified number of history states for an assets. Returns an array of states sorted with the most recent first. The 'assetID' property is required and the count property is optional. A missing count, a count of zero, or too large a count returns all existing history states.] deleteAsset:map[type:object description:Delete an asset, its history, and any recent state activity. Argument is a JSON encoded string containing only an 'assetID'. properties:map[method:invoke function:map[type:string enum:[deleteAsset] description:deleteAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1 description:args are JSON encoded strings]]] deleteAllAssets:map[type:object description:Delete the state of all assets. No arguments are accepted. For each managed asset, the state and history are erased, and the asset is removed if necessary from recent states. properties:map[method:invoke function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]] readContractState:map[type:object description:Returns the state of the contract, which includes its version, its nickname and a list of 'assetID's that are currently managed. properties:map[method:query function:map[type:string enum:[readContractState] description:readContractState function] args:map[description:accepts no arguments type:array items:map[] minItems:0 maxItems:0] result:map[$ref:#/definitions/contractState]]] readAsset:map[description:Returns the state an asset. Argument is a JSON encoded string. The arg is an 'assetID' property. properties:map[method:query function:map[description:readAsset function type:string enum:[readAsset]] args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1] result:map[$ref:#/definitions/state]] type:object] readAllAssets:map[type:object description:Returns the state of all assets as an array of JSON encoded strings. Accepts no arguments. For each managed asset, the state is read from the ledger and added to the returned array. Array is sorted by 'assetID'. properties:map[function:map[type:string enum:[readAllAssets] description:readAllAssets function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/stateArray] method:query]] setCreateOnUpdate:map[properties:map[method:invoke function:map[type:string enum:[setCreateOnUpdate] description:setCreateOnUpdate function] args:map[items:map[setCreateOnUpdate:map[type:boolean]] minItems:1 maxItems:1 description:True for redirect allowed, false for error on asset does not exist. type:array]] type:object description:Allow updateAsset to redirect to createAsset when 'assetID' does not exist.] readRecentStates:map[type:object description:Returns the state of recently updated assets as an array of objects sorted with the most recently updated asset first. Each asset appears exactly once up to a maxmum of 20 in this version of the contract. properties:map[method:query function:map[description:readRecentStates function type:string enum:[readRecentStates]] args:map[description:accepts no arguments type:array items:map[] minItems:0 maxItems:0] result:map[$ref:#/definitions/stateArrayRecentFirst]]] setLoggingLevel:map[description:Sets the logging level in the contract. properties:map[args:map[description:logging levels indicate what you see type:array items:map[logLevel:map[enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG] type:string]] minItems:1 maxItems:1] method:invoke function:map[description:setLoggingLevel function type:string enum:[setLoggingLevel]]] type:object] updateAsset:map[type:object description:Update the state of an asset. The one argument is a JSON encoded event. The 'assetID' property is required along with one or more writable properties. Establishes the next asset state.  properties:map[function:map[description:updateAsset function type:string enum:[updateAsset]] args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event] minItems:1] method:invoke]] deletePropertiesFromAsset:map[type:object description:Delete one or more properties from an asset's state. Argument is a JSON encoded string containing an 'assetID' and an array of qualified property names. For example, in an event object containing common and custom properties objects, the argument might look like {'assetID':'A1',['common.location', 'custom.carrier', 'custom.temperature']} and the result of that invoke would be the removal of the location, carrier and temperature properties. The missing temperature would clear a 'OVERTEMP' alert when the rules engine runs. properties:map[method:invoke function:map[type:string enum:[deletePropertiesFromAsset] description:deletePropertiesFromAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDandPropertyArray] minItems:1 maxItems:1 description:args are JSON encoded strings]]] readAssetSchemas:map[type:object description:Returns a string generated from the schema that contains APIs and Objects as specified in the file 'generate.json' in the /scripts folder. properties:map[method:query function:map[type:string enum:[readAssetSchemas] description:readAssetSchemas function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[type:string description:JSON encoded object containing selected schemas]]]]]
MAP [readAsset:map[properties:map[result:map[$ref:#/definitions/state] method:query function:map[type:string enum:[readAsset] description:readAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1 description:args are JSON encoded strings]] type:object description:Returns the state an asset. Argument is a JSON encoded string. The arg is an 'assetID' property.]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns the state an asset. Argument is a JSON encoded string. The arg is an 'assetID' property.]
MAP [properties:map[method:query function:map[type:string enum:[readAsset] description:readAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1 description:args are JSON encoded strings] result:map[$ref:#/definitions/state]]]
MAP [args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/assetIDKey]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [An object containing only an 'assetID' for use as an argument to read or delete.]
MAP [properties:map[assetID:map[description:The ID of a managed asset. The resource focal point for a smart contract. type:string]]]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
MAP [result:map[$ref:#/definitions/state]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[description:Device timestamp. type:string] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]]
MAP [carrier:map[description:transport entity currently in possession of asset type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
DEFAULT: k: [type] type: [string]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[type:object properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] raised:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[raised:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]
MAP [active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [raised:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [lastEvent:map[description:function and string parameter that created this state object properties:map[redirectedFromFunction:map[type:string description:function that originally received the event] args:map[type:array items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]] function:map[type:string description:function that created this state object]] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [description] type: [function that created this state object]
DEFAULT: k: [type] type: [string]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
MAP [extension:map[description:Application-managed state. Opaque to contract. properties:map[] type:object]]
MAP [properties:map[]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
DEFAULT: k: [method] type: [query]
MAP [function:map[enum:[readAsset] description:readAsset function type:string]]
DEFAULT: k: [description] type: [readAsset function]
DEFAULT: k: [type] type: [string]
ARR [enum:[readAsset]]
MAP [readAllAssets:map[type:object description:Returns the state of all assets as an array of JSON encoded strings. Accepts no arguments. For each managed asset, the state is read from the ledger and added to the returned array. Array is sorted by 'assetID'. properties:map[method:query function:map[enum:[readAllAssets] description:readAllAssets function type:string] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/stateArray]]]]
MAP [properties:map[method:query function:map[type:string enum:[readAllAssets] description:readAllAssets function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/stateArray]]]
MAP [function:map[description:readAllAssets function type:string enum:[readAllAssets]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[readAllAssets]]
DEFAULT: k: [description] type: [readAllAssets function]
MAP [args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]
DEFAULT: k: [description] type: [accepts no arguments]
DEFAULT: k: [type] type: [array]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
MAP [result:map[$ref:#/definitions/stateArray]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/state]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[assetID:map[description:The ID of a managed asset. The resource focal point for a smart contract. type:string] timestamp:map[type:string description:Device timestamp.] location:map[properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate type:object] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[description:Temperature of the asset in CELSIUS. type:number] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[description:function that originally received the event type:string]]]]]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [active:map[items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0 type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [type] type: [object]
MAP [lastEvent:map[properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]] type:object description:function and string parameter that created this state object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states, often for different assets]
DEFAULT: k: [method] type: [query]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns the state of all assets as an array of JSON encoded strings. Accepts no arguments. For each managed asset, the state is read from the ledger and added to the returned array. Array is sorted by 'assetID'.]
MAP [setCreateOnUpdate:map[type:object description:Allow updateAsset to redirect to createAsset when 'assetID' does not exist. properties:map[method:invoke function:map[type:string enum:[setCreateOnUpdate] description:setCreateOnUpdate function] args:map[type:array items:map[setCreateOnUpdate:map[type:boolean]] minItems:1 maxItems:1 description:True for redirect allowed, false for error on asset does not exist.]]]]
MAP [properties:map[method:invoke function:map[type:string enum:[setCreateOnUpdate] description:setCreateOnUpdate function] args:map[type:array items:map[setCreateOnUpdate:map[type:boolean]] minItems:1 maxItems:1 description:True for redirect allowed, false for error on asset does not exist.]]]
MAP [args:map[description:True for redirect allowed, false for error on asset does not exist. type:array items:map[setCreateOnUpdate:map[type:boolean]] minItems:1 maxItems:1]]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [True for redirect allowed, false for error on asset does not exist.]
DEFAULT: k: [type] type: [array]
MAP [items:map[setCreateOnUpdate:map[type:boolean]]]
MAP [setCreateOnUpdate:map[type:boolean]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [method] type: [invoke]
MAP [function:map[type:string enum:[setCreateOnUpdate] description:setCreateOnUpdate function]]
DEFAULT: k: [description] type: [setCreateOnUpdate function]
DEFAULT: k: [type] type: [string]
ARR [enum:[setCreateOnUpdate]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Allow updateAsset to redirect to createAsset when 'assetID' does not exist.]
MAP [updateAsset:map[type:object description:Update the state of an asset. The one argument is a JSON encoded event. The 'assetID' property is required along with one or more writable properties. Establishes the next asset state.  properties:map[function:map[description:updateAsset function type:string enum:[updateAsset]] args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event] minItems:1] method:invoke]]]
MAP [properties:map[method:invoke function:map[type:string enum:[updateAsset] description:updateAsset function] args:map[type:array items:map[$ref:#/definitions/event] minItems:1 maxItems:1 description:args are JSON encoded strings]]]
DEFAULT: k: [method] type: [invoke]
MAP [function:map[enum:[updateAsset] description:updateAsset function type:string]]
DEFAULT: k: [type] type: [string]
ARR [enum:[updateAsset]]
DEFAULT: k: [description] type: [updateAsset function]
MAP [args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/event]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an asset's state. For asset creation, the mandatory property 'assetID' defines a serial number or other unique identifier within its asset class. The specific event type is then selected from the objects in the 'oneOf' property. Creation and update  should include at least one writable property in addition to the assetID. This exemplifies the IoT contract pattern 'partial state as event'.]
MAP [properties:map[references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]] oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]] assetID:map[$ref:#/definitions/assetID] timestamp:map[type:string description:Device timestamp.] location:map[$ref:#/definitions/geo] extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]]]]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[$ref:#/definitions/geo]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [A geographical coordinate]
MAP [extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [Application managed array of extension properties. Opaque to contract.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:object]]
DEFAULT: k: [type] type: [object]
MAP [references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of external references relevant to this asset.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:string]]
DEFAULT: k: [type] type: [string]
ARR [oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]]]
DEFAULT: k: [$ref] type: [#/definitions/airline]
DEFAULT: k: [$ref] type: [#/definitions/airplane]
DEFAULT: k: [$ref] type: [#/definitions/assembly]
DEFAULT: k: [$ref] type: [#/definitions/part]
DEFAULT: k: [$ref] type: [#/definitions/activity]
ARR [required:[assetID]]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Update the state of an asset. The one argument is a JSON encoded event. The 'assetID' property is required along with one or more writable properties. Establishes the next asset state. ]
MAP [deletePropertiesFromAsset:map[type:object description:Delete one or more properties from an asset's state. Argument is a JSON encoded string containing an 'assetID' and an array of qualified property names. For example, in an event object containing common and custom properties objects, the argument might look like {'assetID':'A1',['common.location', 'custom.carrier', 'custom.temperature']} and the result of that invoke would be the removal of the location, carrier and temperature properties. The missing temperature would clear a 'OVERTEMP' alert when the rules engine runs. properties:map[method:invoke function:map[type:string enum:[deletePropertiesFromAsset] description:deletePropertiesFromAsset function] args:map[type:array items:map[$ref:#/definitions/assetIDandPropertyArray] minItems:1 maxItems:1 description:args are JSON encoded strings]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Delete one or more properties from an asset's state. Argument is a JSON encoded string containing an 'assetID' and an array of qualified property names. For example, in an event object containing common and custom properties objects, the argument might look like {'assetID':'A1',['common.location', 'custom.carrier', 'custom.temperature']} and the result of that invoke would be the removal of the location, carrier and temperature properties. The missing temperature would clear a 'OVERTEMP' alert when the rules engine runs.]
MAP [properties:map[method:invoke function:map[type:string enum:[deletePropertiesFromAsset] description:deletePropertiesFromAsset function] args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDandPropertyArray]]]]
MAP [function:map[description:deletePropertiesFromAsset function type:string enum:[deletePropertiesFromAsset]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[deletePropertiesFromAsset]]
DEFAULT: k: [description] type: [deletePropertiesFromAsset function]
MAP [args:map[type:array items:map[$ref:#/definitions/assetIDandPropertyArray] minItems:1 maxItems:1 description:args are JSON encoded strings]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/assetIDandPropertyArray]]
DEFAULT: k: [description] type: [Requested 'assetID' with a list of qualified property names.]
MAP [properties:map[qualPropsToDelete:map[type:array items:map[description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc. type:string]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]]
MAP [qualPropsToDelete:map[type:array items:map[type:string description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]]
DEFAULT: k: [description] type: [The qualified name of a property. E.g. 'event.common.carrier', 'event.custom.temperature', etc.]
DEFAULT: k: [type] type: [string]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
ARR [required:[assetID qualPropsToDelete]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
DEFAULT: k: [method] type: [invoke]
MAP [readAssetSchemas:map[type:object description:Returns a string generated from the schema that contains APIs and Objects as specified in the file 'generate.json' in the /scripts folder. properties:map[method:query function:map[type:string enum:[readAssetSchemas] description:readAssetSchemas function] args:map[description:accepts no arguments type:array items:map[] minItems:0 maxItems:0] result:map[type:string description:JSON encoded object containing selected schemas]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns a string generated from the schema that contains APIs and Objects as specified in the file 'generate.json' in the /scripts folder.]
MAP [properties:map[method:query function:map[type:string enum:[readAssetSchemas] description:readAssetSchemas function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[type:string description:JSON encoded object containing selected schemas]]]
DEFAULT: k: [method] type: [query]
MAP [function:map[description:readAssetSchemas function type:string enum:[readAssetSchemas]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[readAssetSchemas]]
DEFAULT: k: [description] type: [readAssetSchemas function]
MAP [args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [accepts no arguments]
MAP [result:map[type:string description:JSON encoded object containing selected schemas]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [JSON encoded object containing selected schemas]
MAP [readRecentStates:map[type:object description:Returns the state of recently updated assets as an array of objects sorted with the most recently updated asset first. Each asset appears exactly once up to a maxmum of 20 in this version of the contract. properties:map[method:query function:map[type:string enum:[readRecentStates] description:readRecentStates function] args:map[maxItems:0 description:accepts no arguments type:array items:map[] minItems:0] result:map[$ref:#/definitions/stateArrayRecentFirst]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns the state of recently updated assets as an array of objects sorted with the most recently updated asset first. Each asset appears exactly once up to a maxmum of 20 in this version of the contract.]
MAP [properties:map[function:map[type:string enum:[readRecentStates] description:readRecentStates function] args:map[minItems:0 maxItems:0 description:accepts no arguments type:array items:map[]] result:map[$ref:#/definitions/stateArrayRecentFirst] method:query]]
DEFAULT: k: [method] type: [query]
MAP [function:map[type:string enum:[readRecentStates] description:readRecentStates function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[readRecentStates]]
DEFAULT: k: [description] type: [readRecentStates function]
MAP [args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]
DEFAULT: k: [type] type: [array]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [accepts no arguments]
MAP [result:map[$ref:#/definitions/stateArrayRecentFirst]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/state]]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[redirectedFromFunction:map[type:string description:function that originally received the event] args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object]]]]]
MAP [timestamp:map[description:Device timestamp. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [type] type: [string]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0 type:array] raised:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]
MAP [active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [lastEvent:map[type:object description:function and string parameter that created this state object properties:map[function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event] args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array]]]]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[description:function that created this state object type:string] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[description:function that created this state object type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states for one asset sorted by timestamp with the most recent entry first]
MAP [setLoggingLevel:map[type:object description:Sets the logging level in the contract. properties:map[function:map[description:setLoggingLevel function type:string enum:[setLoggingLevel]] args:map[maxItems:1 description:logging levels indicate what you see type:array items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]] minItems:1] method:invoke]]]
DEFAULT: k: [description] type: [Sets the logging level in the contract.]
MAP [properties:map[method:invoke function:map[type:string enum:[setLoggingLevel] description:setLoggingLevel function] args:map[minItems:1 maxItems:1 description:logging levels indicate what you see type:array items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]]]]]
DEFAULT: k: [method] type: [invoke]
MAP [function:map[type:string enum:[setLoggingLevel] description:setLoggingLevel function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[setLoggingLevel]]
DEFAULT: k: [description] type: [setLoggingLevel function]
MAP [args:map[type:array items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]] minItems:1 maxItems:1 description:logging levels indicate what you see]]
DEFAULT: k: [type] type: [array]
MAP [items:map[logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]]]
MAP [logLevel:map[type:string enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[CRITICAL ERROR WARNING NOTICE INFO DEBUG]]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [logging levels indicate what you see]
DEFAULT: k: [type] type: [object]
MAP [init:map[type:object description:Initializes the contract when started, either by deployment or by peer restart. properties:map[function:map[type:string enum:[init] description:init function] args:map[type:array items:map[$ref:#/definitions/initEvent] minItems:1 maxItems:1 description:args are JSON encoded strings] method:deploy]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Initializes the contract when started, either by deployment or by peer restart.]
MAP [properties:map[method:deploy function:map[description:init function type:string enum:[init]] args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/initEvent] minItems:1]]]
DEFAULT: k: [method] type: [deploy]
MAP [function:map[type:string enum:[init] description:init function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[init]]
DEFAULT: k: [description] type: [init function]
MAP [args:map[type:array items:map[$ref:#/definitions/initEvent] minItems:1 maxItems:1 description:args are JSON encoded strings]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/initEvent]]
ARR [required:[version]]
DEFAULT: k: [description] type: [event sent to init on deployment]
DEFAULT: k: [type] type: [object]
MAP [properties:map[version:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] nickname:map[type:string default:TRADELANE description:The nickname of the current contract]]]
MAP [nickname:map[description:The nickname of the current contract type:string default:TRADELANE]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [TRADELANE]
DEFAULT: k: [description] type: [The nickname of the current contract]
MAP [version:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
MAP [createAsset:map[properties:map[method:invoke function:map[type:string enum:[createAsset] description:createAsset function] args:map[items:map[$ref:#/definitions/event] minItems:1 maxItems:1 description:args are JSON encoded strings type:array]] type:object description:Create an asset. One argument, a JSON encoded event. The 'assetID' property is required with zero or more writable properties. Establishes an initial asset state.]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Create an asset. One argument, a JSON encoded event. The 'assetID' property is required with zero or more writable properties. Establishes an initial asset state.]
MAP [properties:map[method:invoke function:map[type:string enum:[createAsset] description:createAsset function] args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event] minItems:1 maxItems:1]]]
MAP [function:map[type:string enum:[createAsset] description:createAsset function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[createAsset]]
DEFAULT: k: [description] type: [createAsset function]
MAP [args:map[minItems:1 maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/event]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/event]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an asset's state. For asset creation, the mandatory property 'assetID' defines a serial number or other unique identifier within its asset class. The specific event type is then selected from the objects in the 'oneOf' property. Creation and update  should include at least one writable property in addition to the assetID. This exemplifies the IoT contract pattern 'partial state as event'.]
MAP [properties:map[assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]] references:map[items:map[type:string] type:array description:An array of external references relevant to this asset. minItems:0] oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]]]]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [Application managed array of extension properties. Opaque to contract.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:object]]
DEFAULT: k: [type] type: [object]
MAP [references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]]]
DEFAULT: k: [description] type: [An array of external references relevant to this asset.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [type] type: [array]
ARR [oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]]]
DEFAULT: k: [$ref] type: [#/definitions/airline]
DEFAULT: k: [$ref] type: [#/definitions/airplane]
DEFAULT: k: [$ref] type: [#/definitions/assembly]
DEFAULT: k: [$ref] type: [#/definitions/part]
DEFAULT: k: [$ref] type: [#/definitions/activity]
ARR [required:[assetID]]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
DEFAULT: k: [method] type: [invoke]
MAP [readAssetHistory:map[type:object description:Requests a specified number of history states for an assets. Returns an array of states sorted with the most recent first. The 'assetID' property is required and the count property is optional. A missing count, a count of zero, or too large a count returns all existing history states. properties:map[method:query function:map[type:string enum:[readAssetHistory] description:readAssetHistory function] args:map[items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1 description:args are JSON encoded strings type:array] result:map[$ref:#/definitions/stateArrayRecentFirst]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Requests a specified number of history states for an assets. Returns an array of states sorted with the most recent first. The 'assetID' property is required and the count property is optional. A missing count, a count of zero, or too large a count returns all existing history states.]
MAP [properties:map[function:map[description:readAssetHistory function type:string enum:[readAssetHistory]] args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1] result:map[$ref:#/definitions/stateArrayRecentFirst] method:query]]
MAP [function:map[type:string enum:[readAssetHistory] description:readAssetHistory function]]
DEFAULT: k: [description] type: [readAssetHistory function]
DEFAULT: k: [type] type: [string]
ARR [enum:[readAssetHistory]]
MAP [args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDandCount] minItems:1 maxItems:1]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/assetIDandCount]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Requested 'assetID' with item 'count'.]
MAP [properties:map[count:map[type:integer] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [count:map[type:integer]]
DEFAULT: k: [type] type: [integer]
ARR [required:[assetID]]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
MAP [result:map[$ref:#/definitions/stateArrayRecentFirst]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[description:Transaction timestamp matching that in the blockchain. type:string] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]] lastEvent:map[properties:map[args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]] type:object description:function and string parameter that created this state object] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[description:Transaction timestamp matching that in the blockchain. type:string] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]]
MAP [location:map[properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate type:object]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
DEFAULT: k: [type] type: [string]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
DEFAULT: k: [type] type: [boolean]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] raised:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[active:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] raised:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]
MAP [raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
MAP [cleared:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [active:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [object]
MAP [lastEvent:map[description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]] type:object]]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
DEFAULT: k: [type] type: [string]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [type] type: [object]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
DEFAULT: k: [type] type: [object]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states for one asset sorted by timestamp with the most recent entry first]
DEFAULT: k: [method] type: [query]
MAP [readAssetSamples:map[type:object description:Returns a string generated from the schema that contains sample Objects as specified in the file 'generate.json' in the /scripts folder. properties:map[method:query function:map[enum:[readAssetSamples] description:readAssetSamples function type:string] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[type:string description:JSON encoded object containing selected sample data]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns a string generated from the schema that contains sample Objects as specified in the file 'generate.json' in the /scripts folder.]
MAP [properties:map[method:query function:map[type:string enum:[readAssetSamples] description:readAssetSamples function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array] result:map[type:string description:JSON encoded object containing selected sample data]]]
MAP [result:map[type:string description:JSON encoded object containing selected sample data]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [JSON encoded object containing selected sample data]
DEFAULT: k: [method] type: [query]
MAP [function:map[type:string enum:[readAssetSamples] description:readAssetSamples function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[readAssetSamples]]
DEFAULT: k: [description] type: [readAssetSamples function]
MAP [args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [accepts no arguments]
DEFAULT: k: [type] type: [array]
MAP [deleteAsset:map[properties:map[method:invoke function:map[type:string enum:[deleteAsset] description:deleteAsset function] args:map[maxItems:1 description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey] minItems:1]] type:object description:Delete an asset, its history, and any recent state activity. Argument is a JSON encoded string containing only an 'assetID'.]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Delete an asset, its history, and any recent state activity. Argument is a JSON encoded string containing only an 'assetID'.]
MAP [properties:map[method:invoke function:map[type:string enum:[deleteAsset] description:deleteAsset function] args:map[description:args are JSON encoded strings type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1]]]
MAP [function:map[type:string enum:[deleteAsset] description:deleteAsset function]]
DEFAULT: k: [type] type: [string]
ARR [enum:[deleteAsset]]
DEFAULT: k: [description] type: [deleteAsset function]
MAP [args:map[type:array items:map[$ref:#/definitions/assetIDKey] minItems:1 maxItems:1 description:args are JSON encoded strings]]
DEFAULT: k: [type] type: [array]
MAP [items:map[$ref:#/definitions/assetIDKey]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [An object containing only an 'assetID' for use as an argument to read or delete.]
MAP [properties:map[assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [minItems] type: [%!s(float64=1)]
DEFAULT: k: [maxItems] type: [%!s(float64=1)]
DEFAULT: k: [description] type: [args are JSON encoded strings]
DEFAULT: k: [method] type: [invoke]
MAP [deleteAllAssets:map[type:object description:Delete the state of all assets. No arguments are accepted. For each managed asset, the state and history are erased, and the asset is removed if necessary from recent states. properties:map[method:invoke function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Delete the state of all assets. No arguments are accepted. For each managed asset, the state and history are erased, and the asset is removed if necessary from recent states.]
MAP [properties:map[method:invoke function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function] args:map[items:map[] minItems:0 maxItems:0 description:accepts no arguments type:array]]]
MAP [args:map[maxItems:0 description:accepts no arguments type:array items:map[] minItems:0]]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [accepts no arguments]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [method] type: [invoke]
MAP [function:map[type:string enum:[deleteAllAssets] description:deleteAllAssets function]]
DEFAULT: k: [description] type: [deleteAllAssets function]
DEFAULT: k: [type] type: [string]
ARR [enum:[deleteAllAssets]]
MAP [readContractState:map[type:object description:Returns the state of the contract, which includes its version, its nickname and a list of 'assetID's that are currently managed. properties:map[method:query function:map[enum:[readContractState] description:readContractState function type:string] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/contractState]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Returns the state of the contract, which includes its version, its nickname and a list of 'assetID's that are currently managed.]
MAP [properties:map[method:query function:map[type:string enum:[readContractState] description:readContractState function] args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments] result:map[$ref:#/definitions/contractState]]]
DEFAULT: k: [method] type: [query]
MAP [function:map[description:readContractState function type:string enum:[readContractState]]]
DEFAULT: k: [type] type: [string]
ARR [enum:[readContractState]]
DEFAULT: k: [description] type: [readContractState function]
MAP [args:map[type:array items:map[] minItems:0 maxItems:0 description:accepts no arguments]]
DEFAULT: k: [type] type: [array]
MAP [items:map[]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [maxItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [accepts no arguments]
MAP [result:map[$ref:#/definitions/contractState]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[version:map[$ref:#/definitions/version] nickname:map[$ref:#/definitions/nickname] activeAssets:map[description:array containing actively managed asset IDs items:map[$ref:#/definitions/assetID] type:array]]]
MAP [version:map[$ref:#/definitions/version]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The version number of the current contract]
MAP [nickname:map[$ref:#/definitions/nickname]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [TRADELANE]
DEFAULT: k: [description] type: [The nickname of the current contract]
MAP [activeAssets:map[items:map[$ref:#/definitions/assetID] type:array description:array containing actively managed asset IDs]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [array containing actively managed asset IDs]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [ChaincodeInputQuery:map[oneOf:[map[$ref:#/definitions/API/readAsset] map[$ref:#/definitions/API/readAllAssets] map[$ref:#/definitions/API/readAssetHistory] map[$ref:#/definitions/API/readAssetSamples] map[$ref:#/definitions/API/readAssetSchemas] map[$ref:#/definitions/API/readRecentStates] map[$ref:#/definitions/API/readContractState] map[$ref:#/definitions/API/readContractObjectModel]] type:object description:the payload for a query message]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a query message]
ARR [oneOf:[map[$ref:#/definitions/API/readAsset] map[$ref:#/definitions/API/readAllAssets] map[$ref:#/definitions/API/readAssetHistory] map[$ref:#/definitions/API/readAssetSamples] map[$ref:#/definitions/API/readAssetSchemas] map[$ref:#/definitions/API/readRecentStates] map[$ref:#/definitions/API/readContractState] map[$ref:#/definitions/API/readContractObjectModel]]]
DEFAULT: k: [$ref] type: [#/definitions/API/readAsset]
DEFAULT: k: [$ref] type: [#/definitions/API/readAllAssets]
DEFAULT: k: [$ref] type: [#/definitions/API/readAssetHistory]
DEFAULT: k: [$ref] type: [#/definitions/API/readAssetSamples]
DEFAULT: k: [$ref] type: [#/definitions/API/readAssetSchemas]
DEFAULT: k: [$ref] type: [#/definitions/API/readRecentStates]
DEFAULT: k: [$ref] type: [#/definitions/API/readContractState]
DEFAULT: k: [$ref] type: [#/definitions/API/readContractObjectModel]
MAP [nickname:map[type:string default:TRADELANE description:The nickname of the current contract]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [TRADELANE]
DEFAULT: k: [description] type: [The nickname of the current contract]
MAP [airplane:map[type:object description:The set of writable properties that define an airplane's state. properties:map[model:map[type:string description:The airplane model or family name.] variant:map[type:string description:A manufacturer-specific variant identifier for this airplane.] assemblies:map[type:array description:An array of assembly IDs belonging to this airplane. items:map[$ref:#/definitions/assetID]] activities:map[description:An array of activity IDs that occured on this airplane. items:map[$ref:#/definitions/assetID] type:array]] required:[model]]]
MAP [properties:map[model:map[type:string description:The airplane model or family name.] variant:map[description:A manufacturer-specific variant identifier for this airplane. type:string] assemblies:map[items:map[$ref:#/definitions/assetID] type:array description:An array of assembly IDs belonging to this airplane.] activities:map[description:An array of activity IDs that occured on this airplane. items:map[$ref:#/definitions/assetID] type:array]]]
MAP [model:map[type:string description:The airplane model or family name.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The airplane model or family name.]
MAP [variant:map[type:string description:A manufacturer-specific variant identifier for this airplane.]]
DEFAULT: k: [description] type: [A manufacturer-specific variant identifier for this airplane.]
DEFAULT: k: [type] type: [string]
MAP [assemblies:map[type:array description:An array of assembly IDs belonging to this airplane. items:map[$ref:#/definitions/assetID]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of assembly IDs belonging to this airplane.]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [activities:map[type:array description:An array of activity IDs that occured on this airplane. items:map[$ref:#/definitions/assetID]]]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of activity IDs that occured on this airplane.]
ARR [required:[model]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an airplane's state.]
MAP [ChaincodeOpPayload:map[type:object properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] method:map[type:string enum:[deploy invoke query] description:the command's service endpoint for deployment, invocation or query] params:map[type:object properties:map[chaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]] ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string default:PUBLIC example:PUBLIC] type:map[default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string]]] id:map[description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response. type:integer format:int64]] required:[jsonrpc method params id]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] method:map[enum:[deploy invoke query] description:the command's service endpoint for deployment, invocation or query type:string] params:map[type:object properties:map[type:map[example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG] chaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]] ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string default:PUBLIC]]] id:map[type:integer format:int64 description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]]]
MAP [jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [method:map[type:string enum:[deploy invoke query] description:the command's service endpoint for deployment, invocation or query]]
DEFAULT: k: [type] type: [string]
ARR [enum:[deploy invoke query]]
DEFAULT: k: [description] type: [the command's service endpoint for deployment, invocation or query]
MAP [params:map[type:object properties:map[confidentialityLevel:map[type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode.] type:map[type:string default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language.] chaincodeID:map[type:object properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[description:Chaincode name identifier. This value is required by the invoke and query transactions. type:string]]] ctorMsg:map[oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]] type:object description:the payload for a deploy, invoke or query message] secureContext:map[type:string description:Username when security is enabled.]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[secureContext:map[description:Username when security is enabled. type:string] confidentialityLevel:map[example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string default:PUBLIC] type:map[description:Chaincode specification language. type:string default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE]] chaincodeID:map[type:object properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[description:Chaincode name identifier. This value is required by the invoke and query transactions. type:string]]] ctorMsg:map[oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]] type:object description:the payload for a deploy, invoke or query message]]]
MAP [confidentialityLevel:map[type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode.]]
DEFAULT: k: [default] type: [PUBLIC]
DEFAULT: k: [example] type: [PUBLIC]
ARR [enum:[PUBLIC CONFIDENTIAL]]
DEFAULT: k: [description] type: [Confidentiality level of the Chaincode.]
DEFAULT: k: [type] type: [string]
MAP [type:map[example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG]]
DEFAULT: k: [description] type: [Chaincode specification language.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [GOLANG]
DEFAULT: k: [example] type: [GOLANG]
ARR [enum:[UNDEFINED GOLANG NODE]]
MAP [chaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]
MAP [path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode location in the file system. This value is required by the deploy transaction.]
MAP [name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode name identifier. This value is required by the invoke and query transactions.]
MAP [ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a deploy, invoke or query message]
ARR [oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputDeploy]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputInvoke]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputQuery]
MAP [secureContext:map[type:string description:Username when security is enabled.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Username when security is enabled.]
MAP [id:map[type:integer format:int64 description:An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [description] type: [An integer number used to correlate the request and response objects. If it is not included, the request is assumed to be a notification and the server will not generate a response.]
ARR [required:[jsonrpc method params id]]
MAP [ChaincodeInput:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a deploy, invoke or query message]
ARR [oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputDeploy]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputInvoke]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputQuery]
MAP [rpcResponse:map[type:object properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[type:string default:500 description:Additional information about the response or values returned.]] required:[Status]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[Message:map[type:string default:500 description:Additional information about the response or values returned.] Status:map[description:A string confirming successful request execution. type:string default:OK]]]
MAP [Status:map[type:string default:OK description:A string confirming successful request execution.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [OK]
DEFAULT: k: [description] type: [A string confirming successful request execution.]
MAP [Message:map[type:string default:500 description:Additional information about the response or values returned.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [500]
DEFAULT: k: [description] type: [Additional information about the response or values returned.]
ARR [required:[Status]]
MAP [version:map[type:string description:The version number of the current contract]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The version number of the current contract]
MAP [eventWithFunction:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [type] type: [string]
MAP [contractState:map[type:object properties:map[version:map[type:string description:The version number of the current contract] nickname:map[type:string default:TRADELANE description:The nickname of the current contract] activeAssets:map[type:array description:array containing actively managed asset IDs items:map[description:The ID of a managed asset. The resource focal point for a smart contract. type:string]]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[version:map[type:string description:The version number of the current contract] nickname:map[default:TRADELANE description:The nickname of the current contract type:string] activeAssets:map[type:array description:array containing actively managed asset IDs items:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]]]
MAP [activeAssets:map[type:array description:array containing actively managed asset IDs items:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [array containing actively managed asset IDs]
MAP [items:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [version:map[type:string description:The version number of the current contract]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The version number of the current contract]
MAP [nickname:map[type:string default:TRADELANE description:The nickname of the current contract]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [TRADELANE]
DEFAULT: k: [description] type: [The nickname of the current contract]
MAP [ChaincodeSpec:map[properties:map[ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode.] type:map[enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language. type:string default:GOLANG example:GOLANG] chaincodeID:map[type:object properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]] type:object]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[type:map[type:string default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language.] chaincodeID:map[type:object properties:map[path:map[description:Chaincode location in the file system. This value is required by the deploy transaction. type:string] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]] ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]] secureContext:map[type:string description:Username when security is enabled.] confidentialityLevel:map[default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL] description:Confidentiality level of the Chaincode. type:string]]]
MAP [type:map[type:string default:GOLANG example:GOLANG enum:[UNDEFINED GOLANG NODE] description:Chaincode specification language.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [GOLANG]
DEFAULT: k: [example] type: [GOLANG]
ARR [enum:[UNDEFINED GOLANG NODE]]
DEFAULT: k: [description] type: [Chaincode specification language.]
MAP [chaincodeID:map[type:object properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]
MAP [path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode location in the file system. This value is required by the deploy transaction.]
MAP [name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode name identifier. This value is required by the invoke and query transactions.]
MAP [ctorMsg:map[type:object description:the payload for a deploy, invoke or query message oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for a deploy, invoke or query message]
ARR [oneOf:[map[$ref:#/definitions/ChaincodeInputDeploy] map[$ref:#/definitions/ChaincodeInputInvoke] map[$ref:#/definitions/ChaincodeInputQuery]]]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputDeploy]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputInvoke]
DEFAULT: k: [$ref] type: [#/definitions/ChaincodeInputQuery]
MAP [secureContext:map[type:string description:Username when security is enabled.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Username when security is enabled.]
MAP [confidentialityLevel:map[description:Confidentiality level of the Chaincode. type:string default:PUBLIC example:PUBLIC enum:[PUBLIC CONFIDENTIAL]]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [PUBLIC]
DEFAULT: k: [example] type: [PUBLIC]
ARR [enum:[PUBLIC CONFIDENTIAL]]
DEFAULT: k: [description] type: [Confidentiality level of the Chaincode.]
MAP [ChaincodeID:map[type:object properties:map[name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.] path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.] name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]]
MAP [path:map[type:string description:Chaincode location in the file system. This value is required by the deploy transaction.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Chaincode location in the file system. This value is required by the deploy transaction.]
MAP [name:map[type:string description:Chaincode name identifier. This value is required by the invoke and query transactions.]]
DEFAULT: k: [description] type: [Chaincode name identifier. This value is required by the invoke and query transactions.]
DEFAULT: k: [type] type: [string]
MAP [event:map[properties:map[references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]] oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]]] required:[assetID] type:object description:The set of writable properties that define an asset's state. For asset creation, the mandatory property 'assetID' defines a serial number or other unique identifier within its asset class. The specific event type is then selected from the objects in the 'oneOf' property. Creation and update  should include at least one writable property in addition to the assetID. This exemplifies the IoT contract pattern 'partial state as event'.]]
MAP [properties:map[references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]] oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] extension:map[type:array description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object]]]]
ARR [oneOf:[map[$ref:#/definitions/airline] map[$ref:#/definitions/airplane] map[$ref:#/definitions/assembly] map[$ref:#/definitions/part] map[$ref:#/definitions/activity]]]
DEFAULT: k: [$ref] type: [#/definitions/airline]
DEFAULT: k: [$ref] type: [#/definitions/airplane]
DEFAULT: k: [$ref] type: [#/definitions/assembly]
DEFAULT: k: [$ref] type: [#/definitions/part]
DEFAULT: k: [$ref] type: [#/definitions/activity]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [description] type: [Device timestamp.]
DEFAULT: k: [type] type: [string]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [extension:map[description:Application managed array of extension properties. Opaque to contract. minItems:0 items:map[type:object] type:array]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [Application managed array of extension properties. Opaque to contract.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:object]]
DEFAULT: k: [type] type: [object]
MAP [references:map[type:array description:An array of external references relevant to this asset. minItems:0 items:map[type:string]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of external references relevant to this asset.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [items:map[type:string]]
DEFAULT: k: [type] type: [string]
ARR [required:[assetID]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an asset's state. For asset creation, the mandatory property 'assetID' defines a serial number or other unique identifier within its asset class. The specific event type is then selected from the objects in the 'oneOf' property. Creation and update  should include at least one writable property in addition to the assetID. This exemplifies the IoT contract pattern 'partial state as event'.]
MAP [ChaincodeInputInvoke:map[type:object description:the payload for an invoke message oneOf:[map[$ref:#/definitions/API/createAsset] map[$ref:#/definitions/API/updateAsset] map[$ref:#/definitions/API/deleteAsset] map[$ref:#/definitions/API/deletePropertiesFromAsset] map[$ref:#/definitions/API/setLoggingLevel] map[$ref:#/definitions/API/setCreateOnUpdate] map[$ref:#/definitions/API/deleteAllAssets]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [the payload for an invoke message]
ARR [oneOf:[map[$ref:#/definitions/API/createAsset] map[$ref:#/definitions/API/updateAsset] map[$ref:#/definitions/API/deleteAsset] map[$ref:#/definitions/API/deletePropertiesFromAsset] map[$ref:#/definitions/API/setLoggingLevel] map[$ref:#/definitions/API/setCreateOnUpdate] map[$ref:#/definitions/API/deleteAllAssets]]]
DEFAULT: k: [$ref] type: [#/definitions/API/createAsset]
DEFAULT: k: [$ref] type: [#/definitions/API/updateAsset]
DEFAULT: k: [$ref] type: [#/definitions/API/deleteAsset]
DEFAULT: k: [$ref] type: [#/definitions/API/deletePropertiesFromAsset]
DEFAULT: k: [$ref] type: [#/definitions/API/setLoggingLevel]
DEFAULT: k: [$ref] type: [#/definitions/API/setCreateOnUpdate]
DEFAULT: k: [$ref] type: [#/definitions/API/deleteAllAssets]
MAP [assembly:map[type:object description:The set of writable properties that define an assembly's state. properties:map[ATAcode:map[type:string description:The ATA code defining the assembly type, e.g. 32=landing gear, 32-50=steering.] name:map[type:string description:The assembly name.] ALRS:map[description:Alerting service zone. type:string] lifeLimitInitial:map[type:string description:Initial assembly life limit.] lifeLimitUsed:map[type:string description:Assembly life limit that has been used, including adjustments.] parts:map[description:An array of part IDs belonging to this assembly. items:map[$ref:#/definitions/assetID quantity:integer] type:array] activities:map[type:array description:An array of activity IDs that occured on this assembly. items:map[$ref:#/definitions/assetID]]] required:[ATAcode name]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an assembly's state.]
MAP [properties:map[lifeLimitUsed:map[type:string description:Assembly life limit that has been used, including adjustments.] parts:map[type:array description:An array of part IDs belonging to this assembly. items:map[$ref:#/definitions/assetID quantity:integer]] activities:map[description:An array of activity IDs that occured on this assembly. items:map[$ref:#/definitions/assetID] type:array] ATAcode:map[type:string description:The ATA code defining the assembly type, e.g. 32=landing gear, 32-50=steering.] name:map[type:string description:The assembly name.] ALRS:map[type:string description:Alerting service zone.] lifeLimitInitial:map[description:Initial assembly life limit. type:string]]]
MAP [parts:map[type:array description:An array of part IDs belonging to this assembly. items:map[$ref:#/definitions/assetID quantity:integer]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of part IDs belonging to this assembly.]
MAP [items:map[quantity:integer $ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [activities:map[type:array description:An array of activity IDs that occured on this assembly. items:map[$ref:#/definitions/assetID]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of activity IDs that occured on this assembly.]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [ATAcode:map[type:string description:The ATA code defining the assembly type, e.g. 32=landing gear, 32-50=steering.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ATA code defining the assembly type, e.g. 32=landing gear, 32-50=steering.]
MAP [name:map[type:string description:The assembly name.]]
DEFAULT: k: [description] type: [The assembly name.]
DEFAULT: k: [type] type: [string]
MAP [ALRS:map[type:string description:Alerting service zone.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Alerting service zone.]
MAP [lifeLimitInitial:map[type:string description:Initial assembly life limit.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Initial assembly life limit.]
MAP [lifeLimitUsed:map[type:string description:Assembly life limit that has been used, including adjustments.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Assembly life limit that has been used, including adjustments.]
ARR [required:[ATAcode name]]
MAP [alertName:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
MAP [airline:map[required:[name code] type:object description:The set of writable properties that define an airline's state. properties:map[code:map[type:string description:The airline 3 letter code.] airplanes:map[items:map[$ref:#/definitions/assetID] type:array description:An array of airplane IDs belonging to this airline.] activities:map[description:An array of activity IDs that occured for this airliine. items:map[$ref:#/definitions/assetID] type:array] name:map[type:string description:The name of the airline.]]]]
MAP [properties:map[name:map[type:string description:The name of the airline.] code:map[type:string description:The airline 3 letter code.] airplanes:map[type:array description:An array of airplane IDs belonging to this airline. items:map[$ref:#/definitions/assetID]] activities:map[type:array description:An array of activity IDs that occured for this airliine. items:map[$ref:#/definitions/assetID]]]]
MAP [name:map[type:string description:The name of the airline.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The name of the airline.]
MAP [code:map[type:string description:The airline 3 letter code.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The airline 3 letter code.]
MAP [airplanes:map[description:An array of airplane IDs belonging to this airline. items:map[$ref:#/definitions/assetID] type:array]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of airplane IDs belonging to this airline.]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [activities:map[type:array description:An array of activity IDs that occured for this airliine. items:map[$ref:#/definitions/assetID]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of activity IDs that occured for this airliine.]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
ARR [required:[name code]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an airline's state.]
MAP [part:map[type:object description:The set of writable properties that define a part's state. properties:map[lifeLimitInitial:map[type:string description:Initial part life limit.] lifeLimitUsed:map[description:Part life limit that has been used, including adjustments. type:string] activities:map[type:array description:An array of activity IDs that occured on this part. items:map[$ref:#/definitions/assetID]] name:map[type:string description:The part name.] partNumber:map[type:string description:Part number.] vendorName:map[type:string description:Vendor name.] vendorNumber:map[description:Vendor part number. type:string]] required:[partNumber name]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define a part's state.]
MAP [properties:map[vendorName:map[type:string description:Vendor name.] vendorNumber:map[type:string description:Vendor part number.] lifeLimitInitial:map[type:string description:Initial part life limit.] lifeLimitUsed:map[description:Part life limit that has been used, including adjustments. type:string] activities:map[type:array description:An array of activity IDs that occured on this part. items:map[$ref:#/definitions/assetID]] name:map[type:string description:The part name.] partNumber:map[type:string description:Part number.]]]
MAP [vendorName:map[type:string description:Vendor name.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Vendor name.]
MAP [vendorNumber:map[type:string description:Vendor part number.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Vendor part number.]
MAP [lifeLimitInitial:map[type:string description:Initial part life limit.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Initial part life limit.]
MAP [lifeLimitUsed:map[type:string description:Part life limit that has been used, including adjustments.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Part life limit that has been used, including adjustments.]
MAP [activities:map[type:array description:An array of activity IDs that occured on this part. items:map[$ref:#/definitions/assetID]]]
DEFAULT: k: [type] type: [array]
DEFAULT: k: [description] type: [An array of activity IDs that occured on this part.]
MAP [items:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [name:map[type:string description:The part name.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The part name.]
MAP [partNumber:map[type:string description:Part number.]]
DEFAULT: k: [description] type: [Part number.]
DEFAULT: k: [type] type: [string]
ARR [required:[partNumber name]]
MAP [activity:map[properties:map[activityType:map[type:string description:The type of the activity.] activityNumber:map[type:string description:Activity number.] activityDate:map[type:string description:Date the activity occured (e.g. date from aechive of activities being copied into this ledger).] activityDetail:map[description:Detailed description of the activity. type:string]] required:[type name] type:object description:The set of writable properties that define an activity.]]
MAP [properties:map[activityDetail:map[description:Detailed description of the activity. type:string] activityType:map[type:string description:The type of the activity.] activityNumber:map[type:string description:Activity number.] activityDate:map[type:string description:Date the activity occured (e.g. date from aechive of activities being copied into this ledger).]]]
MAP [activityType:map[type:string description:The type of the activity.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The type of the activity.]
MAP [activityNumber:map[type:string description:Activity number.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Activity number.]
MAP [activityDate:map[type:string description:Date the activity occured (e.g. date from aechive of activities being copied into this ledger).]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Date the activity occured (e.g. date from aechive of activities being copied into this ledger).]
MAP [activityDetail:map[type:string description:Detailed description of the activity.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Detailed description of the activity.]
ARR [required:[type name]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [The set of writable properties that define an activity.]
MAP [stateArray:map[items:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] raised:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.]]] minItems:0 description:an array of states, often for different assets type:array]]
DEFAULT: k: [type] type: [array]
MAP [items:map[description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] extension:map[description:Application-managed state. Opaque to contract. properties:map[] type:object] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0] active:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[timestamp:map[description:Device timestamp. type:string] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] temperature:map[description:Temperature of the asset in CELSIUS. type:number] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] cleared:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]]
MAP [assetID:map[description:The ID of a managed asset. The resource focal point for a smart contract. type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
DEFAULT: k: [type] type: [string]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]]
MAP [properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]
MAP [active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [raised:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[description:function that created this state object type:string] redirectedFromFunction:map[type:string description:function that originally received the event]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[description:function that created this state object type:string] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states, often for different assets]
MAP [stateArrayRecentFirst:map[items:map[properties:map[compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[longitude:map[type:number] latitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] extension:map[description:Application-managed state. Opaque to contract. properties:map[] type:object] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]] type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.] minItems:0 description:an array of states for one asset sorted by timestamp with the most recent entry first type:array]]
MAP [items:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[description:Device timestamp. type:string] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[description:Temperature of the asset in CELSIUS. type:number]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
MAP [properties:map[extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[type:number description:Temperature of the asset in CELSIUS.] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[redirectedFromFunction:map[type:string description:function that originally received the event] args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object]]] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]] type:object]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]]
MAP [active:map[items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0 type:array]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
MAP [raised:map[minItems:0 type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
MAP [lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[description:parameters to the function, usually args[0] is populated with a JSON encoded event object type:string]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[type:string description:function that created this state object] redirectedFromFunction:map[description:function that originally received the event type:string]]]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that originally received the event]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[description:function that created this state object type:string]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
DEFAULT: k: [type] type: [object]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [A geographical coordinate]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
DEFAULT: k: [type] type: [string]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states for one asset sorted by timestamp with the most recent entry first]
DEFAULT: k: [type] type: [array]
MAP [ChaincodeOpSuccess:map[required:[jsonrpc result id] type:object properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] result:map[type:object properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[default:500 description:Additional information about the response or values returned. type:string]] required:[Status]] id:map[default:123 description:This number will be the same as the value of the id member in the request object. type:integer format:int64]]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] result:map[type:object properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[type:string default:500 description:Additional information about the response or values returned.]] required:[Status]] id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object.]]]
MAP [jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [result:map[type:object properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[type:string default:500 description:Additional information about the response or values returned.]] required:[Status]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[Status:map[type:string default:OK description:A string confirming successful request execution.] Message:map[type:string default:500 description:Additional information about the response or values returned.]]]
MAP [Status:map[type:string default:OK description:A string confirming successful request execution.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [OK]
DEFAULT: k: [description] type: [A string confirming successful request execution.]
MAP [Message:map[type:string default:500 description:Additional information about the response or values returned.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [500]
DEFAULT: k: [description] type: [Additional information about the response or values returned.]
ARR [required:[Status]]
MAP [id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object.]]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=123)]
DEFAULT: k: [description] type: [This number will be the same as the value of the id member in the request object.]
ARR [required:[jsonrpc result id]]
MAP [ChaincodeOpFailure:map[type:object properties:map[error:map[type:object properties:map[code:map[default:-32700 description:A number that indicates the error type that occurred. type:integer format:int64] message:map[type:string default:Parse error description:A string providing a short description of the error.] data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]] required:[code message]] id:map[description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null. type:integer format:int64 default:123] jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]] required:[jsonrpc error id]]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.] error:map[type:object properties:map[code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.] message:map[default:Parse error description:A string providing a short description of the error. type:string] data:map[description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.). type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input]] required:[code message]] id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.]]]
MAP [jsonrpc:map[type:string default:2.0 description:A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [2.0]
DEFAULT: k: [description] type: [A string specifying the version of the JSON-RPC protocol. Must be exactly '2.0'.]
MAP [error:map[properties:map[data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).] code:map[format:int64 default:-32700 description:A number that indicates the error type that occurred. type:integer] message:map[type:string default:Parse error description:A string providing a short description of the error.]] required:[code message] type:object]]
DEFAULT: k: [type] type: [object]
MAP [properties:map[data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).] code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.] message:map[type:string default:Parse error description:A string providing a short description of the error.]]]
MAP [code:map[type:integer format:int64 default:-32700 description:A number that indicates the error type that occurred.]]
DEFAULT: k: [description] type: [A number that indicates the error type that occurred.]
DEFAULT: k: [type] type: [integer]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=-32700)]
MAP [message:map[type:string default:Parse error description:A string providing a short description of the error.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Parse error]
DEFAULT: k: [description] type: [A string providing a short description of the error.]
MAP [data:map[type:string default:Error unmarshalling chaincode request payload: unexpected end of JSON input description:A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [default] type: [Error unmarshalling chaincode request payload: unexpected end of JSON input]
DEFAULT: k: [description] type: [A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).]
ARR [required:[code message]]
MAP [id:map[type:integer format:int64 default:123 description:This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.]]
DEFAULT: k: [format] type: [int64]
DEFAULT: k: [default] type: [%!s(float64=123)]
DEFAULT: k: [description] type: [This number will be the same as the value of the id member in the request object. If there was an error detecting the id in the request object (e.g. Parse error/Invalid Request), it will be null.]
DEFAULT: k: [type] type: [integer]
ARR [required:[jsonrpc error id]]
MAP [stateArrayRecentFirstMap:map[properties:map[assetID:map[$ref:#/definitions/assetID] statesRecentFirst:map[$ref:#/definitions/stateArrayRecentFirst]] type:Object description:]]
DEFAULT: k: [type] type: [Object]
DEFAULT: k: [description] type: []
MAP [properties:map[assetID:map[$ref:#/definitions/assetID] statesRecentFirst:map[$ref:#/definitions/stateArrayRecentFirst]]]
MAP [assetID:map[$ref:#/definitions/assetID]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [statesRecentFirst:map[$ref:#/definitions/stateArrayRecentFirst]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:object description:A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts. properties:map[extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[description:Temperature of the asset in CELSIUS. type:number] txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]] type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[description:function that created this state object type:string] redirectedFromFunction:map[type:string description:function that originally received the event]]] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.] location:map[properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate type:object] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]]]
MAP [properties:map[txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.] alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]] lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]] function:map[description:function that created this state object type:string] redirectedFromFunction:map[type:string description:function that originally received the event]]] extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]] temperature:map[description:Temperature of the asset in CELSIUS. type:number] location:map[properties:map[latitude:map[type:number] longitude:map[type:number]] description:A geographical coordinate type:object] carrier:map[type:string description:transport entity currently in possession of asset] txntimestamp:map[description:Transaction timestamp matching that in the blockchain. type:string] compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.] assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.] timestamp:map[type:string description:Device timestamp.]]]
MAP [extension:map[type:object description:Application-managed state. Opaque to contract. properties:map[]]]
DEFAULT: k: [description] type: [Application-managed state. Opaque to contract.]
MAP [properties:map[]]
DEFAULT: k: [type] type: [object]
MAP [temperature:map[type:number description:Temperature of the asset in CELSIUS.]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [Temperature of the asset in CELSIUS.]
MAP [txnuuid:map[type:string description:Transaction UUID matching that in the blockchain.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Transaction UUID matching that in the blockchain.]
MAP [alerts:map[type:object description:Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state. properties:map[active:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0] raised:map[type:array items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0] cleared:map[type:array items:map[enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string] minItems:0]]]]
MAP [properties:map[active:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0] cleared:map[items:map[description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance. type:string enum:[OVERTTEMP]] minItems:0 type:array]]]
MAP [active:map[items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0 type:array]]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
MAP [raised:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
MAP [cleared:map[type:array items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.] minItems:0]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string enum:[OVERTTEMP] description:Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]]
DEFAULT: k: [type] type: [string]
ARR [enum:[OVERTTEMP]]
DEFAULT: k: [description] type: [Alerts are triggered or cleared by rules that are run against incoming events. This contract considers any active alert to created a state of non-compliance.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [Active means that the alert is in force in this state. Raised means that the alert became active as the result of the event that generated this state. Cleared means that the alert became inactive as the result of the event that generated this state.]
MAP [lastEvent:map[type:object description:function and string parameter that created this state object properties:map[args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [function and string parameter that created this state object]
MAP [properties:map[args:map[items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object] type:array] function:map[type:string description:function that created this state object] redirectedFromFunction:map[type:string description:function that originally received the event]]]
MAP [redirectedFromFunction:map[type:string description:function that originally received the event]]
DEFAULT: k: [description] type: [function that originally received the event]
DEFAULT: k: [type] type: [string]
MAP [args:map[type:array items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]]
DEFAULT: k: [type] type: [array]
MAP [items:map[type:string description:parameters to the function, usually args[0] is populated with a JSON encoded event object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [parameters to the function, usually args[0] is populated with a JSON encoded event object]
MAP [function:map[type:string description:function that created this state object]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [function that created this state object]
MAP [compliant:map[type:boolean description:A contract-specific indication that this asset is compliant.]]
DEFAULT: k: [type] type: [boolean]
DEFAULT: k: [description] type: [A contract-specific indication that this asset is compliant.]
MAP [assetID:map[type:string description:The ID of a managed asset. The resource focal point for a smart contract.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [The ID of a managed asset. The resource focal point for a smart contract.]
MAP [timestamp:map[type:string description:Device timestamp.]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [Device timestamp.]
MAP [location:map[description:A geographical coordinate type:object properties:map[latitude:map[type:number] longitude:map[type:number]]]]
MAP [properties:map[latitude:map[type:number] longitude:map[type:number]]]
MAP [latitude:map[type:number]]
DEFAULT: k: [type] type: [number]
MAP [longitude:map[type:number]]
DEFAULT: k: [type] type: [number]
DEFAULT: k: [description] type: [A geographical coordinate]
DEFAULT: k: [type] type: [object]
MAP [carrier:map[type:string description:transport entity currently in possession of asset]]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [description] type: [transport entity currently in possession of asset]
MAP [txntimestamp:map[type:string description:Transaction timestamp matching that in the blockchain.]]
DEFAULT: k: [description] type: [Transaction timestamp matching that in the blockchain.]
DEFAULT: k: [type] type: [string]
DEFAULT: k: [type] type: [object]
DEFAULT: k: [description] type: [A set of properties that constitute a complete asset state. Includes event properties and any other calculated properties such as compliance related alerts.]
DEFAULT: k: [minItems] type: [%!s(float64=0)]
DEFAULT: k: [description] type: [an array of states for one asset sorted by timestamp with the most recent entry first]
DEFAULT: k: [swagger] type: [2.0]
*********** GENERATE SCHEMA FILE **************
 <nil>
Generate Go SCHEMA file schemas.go for: 
   [init createAsset updateAsset deleteAsset deletePropertiesFromAsset deleteAllAssets readAsset readAllAssets readAssetHistory readRecentStates setLoggingLevel setCreateOnUpdate] and: 
   [assetIDandCount assetIDKey initEvent event state]
*********** GENERATE SAMPLE FILE **************
 <nil>
Generate Go SAMPLE file samples.go for: 
   [initEvent event state contractState]
**Warning** Element oneOf has no type field
** Warning** extension is type object yet has no properties in SampleType
